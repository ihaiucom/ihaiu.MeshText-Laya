{"version":3,"file":"bundle.js","sources":["../../src/ui/layaMaxUI.ts","../../src/script/GameUI.ts","../../src/GameConfig.ts","../../src/_test/TestSene.ts","../../src/MeshText/MeshTextType.ts","../../src/MeshText/HorizontalAlignType.ts","../../src/MeshText/ToolMeshText.ts","../../src/MeshText/MeshTextItem.ts","../../src/MeshText/MeshTextBatchMesh.ts","../../src/MeshText/MeshTextBatchSprite.ts","../../src/MeshText/Material/BaseMaterial.ts","../../src/MeshText/Material/MeshTextBatchTweenMaterial.ts","../../src/MeshText/Material/MeshTextBatchTweenSeparateMaterial.ts","../../src/MeshText/MeshTextAtlas.ts","../../src/MeshText/MeshTextLib.ts","../../src/WarBitmapText/TextStyleMap.ts","../../src/WarBitmapText/WarBitmapTextItem.ts","../../src/WarBitmapText/WarBitmapText.ts","../../src/WarBitmapText/TextStyleType.ts","../../src/WarBitmapText/WarBitmapTextLib.ts","../../src/WarTextureText/TextureTextAtlas.ts","../../src/WarTextureText/WarTextureTextItem.ts","../../src/WarTextureText/WarTextureText.ts","../../src/WarTextureText/WarTextureTextLib.ts","../../src/WarMaterialText/WarMaterialTextAtlas.ts","../../src/WarMaterialText/WarMaterialTextItem.ts","../../src/WarMaterialText/WarMaterialText.ts","../../src/WarMaterialText/WarMaterialLib.ts","../../src/_test/TestText.ts","../../src/_test/TestMain.ts"],"sourcesContent":["/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\nimport View=Laya.View;\r\nimport Dialog=Laya.Dialog;\r\nimport Scene=Laya.Scene;\nvar REG: Function = Laya.ClassUtils.regClass;\nexport module ui.test {\r\n    export class TestSceneUI extends Laya.Scene {\r\n        constructor(){ super()}\r\n        createChildren():void {\r\n            super.createChildren();\r\n            this.loadScene(\"test/TestScene\");\r\n        }\r\n    }\r\n    REG(\"ui.test.TestSceneUI\",TestSceneUI);\r\n}\r","import { ui } from \"./../ui/layaMaxUI\";\r\n/**\r\n * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联\r\n * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果\r\n * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。\r\n */\r\nexport default class GameUI extends ui.test.TestSceneUI {\r\n    constructor() {\r\n        super();\r\n\t\t\r\n        //添加3D场景\r\n        var scene: Laya.Scene3D = Laya.stage.addChild(new Laya.Scene3D()) as Laya.Scene3D;\r\n\r\n        //添加照相机\r\n        var camera: Laya.Camera = (scene.addChild(new Laya.Camera(0, 0.1, 100))) as Laya.Camera;\r\n        camera.transform.translate(new Laya.Vector3(0, 3, 3));\r\n        camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);\r\n\r\n        //添加方向光\r\n        var directionLight: Laya.DirectionLight = scene.addChild(new Laya.DirectionLight()) as Laya.DirectionLight;\r\n        directionLight.color = new Laya.Vector3(0.6, 0.6, 0.6);\r\n        directionLight.transform.worldMatrix.setForward(new Laya.Vector3(1, -1, 0));\r\n\r\n        //添加自定义模型\r\n        var box: Laya.MeshSprite3D = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1))) as Laya.MeshSprite3D;\r\n        box.transform.rotate(new Laya.Vector3(0, 45, 0), false, false);\r\n        var material: Laya.BlinnPhongMaterial = new Laya.BlinnPhongMaterial();\r\n\t\tLaya.Texture2D.load(\"res/layabox.png\", Laya.Handler.create(null, function(tex:Laya.Texture2D) {\r\n\t\t\t\tmaterial.albedoTexture = tex;\r\n\t\t}));\r\n        box.meshRenderer.material = material;\r\n    }\r\n}","/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\r\nimport GameUI from \"./script/GameUI\"\r\n/*\r\n* 游戏初始化配置;\r\n*/\r\nexport default class GameConfig{\r\n    static width:number=1334;\r\n    static height:number=750;\r\n    static scaleMode:string=Laya.Stage.SCALE_FIXED_AUTO;\r\n    static screenMode:string=\"none\";\r\n    static alignV:string=\"top\";\r\n    static alignH:string=\"left\";\r\n    static startScene:any=\"test/TestScene.scene\";\r\n    static sceneRoot:string=\"\";\r\n    static debug:boolean=false;\r\n    static stat:boolean=true;\r\n    static physicsDebug:boolean=false;\r\n    static exportSceneToJson:boolean=true;\r\n    constructor(){}\r\n    static init(){\r\n        var reg: Function = Laya.ClassUtils.regClass;\r\n        reg(\"script/GameUI.ts\",GameUI);\r\n    }\r\n}\r\nGameConfig.init();","import Vector3 = Laya.Vector3;\r\nexport class TestScene extends Laya.Scene3D\r\n{\r\n    static create(): TestScene\r\n    {\r\n        let node = new TestScene();\r\n        node.name = \"WarScene\";\r\n\r\n        let scene = node;\r\n        scene.init()\r\n        return scene;\r\n    }\r\n\r\n    /** 场景根节点 */\r\n    sceneRoot:Laya.Sprite3D;\r\n\r\n    /** 地图节点 */\r\n    mapNode: Laya.Sprite3D;\r\n\r\n    /** 摄像机 */\r\n    camera:Laya.Camera;\r\n    cameraNode:Laya.Sprite3D;\r\n\r\n    /** 屏幕空间层 */\r\n    screen3DLayer:Laya.Sprite3D;\r\n\r\n    /** 灯光 */\r\n    directionLight:Laya.DirectionLight;\r\n\r\n    \r\n    init()\r\n    {\r\n        window['warScene'] = this;\r\n\r\n        this.initCamera();\r\n    }\r\n\r\n    \r\n    initCamera()\r\n    {\r\n        var cameraRootNode: Laya.Sprite3D = new Laya.Sprite3D(\"CameraRoot\");\r\n        var cameraRotationXNode: Laya.Sprite3D = new Laya.Sprite3D(\"CameraRotationX\");\r\n        var camera:Laya.Camera = new Laya.Camera(0, 0.1, 1000);\r\n        var screenLayer: Laya.Sprite3D = new Laya.Sprite3D(\"ScreenLayer\");\r\n\r\n        cameraRootNode.addChild(cameraRotationXNode);\r\n        cameraRotationXNode.addChild(camera);\r\n        camera.addChild(screenLayer);\r\n\r\n        cameraRotationXNode.transform.localRotationEulerX = -20;\r\n        camera.transform.localPosition = new Vector3(0, 0, 200);\r\n\r\n        camera.clearColor = new Laya.Vector4(0.2, 0.5, 0.8, 1);\r\n        camera.orthographic = true;\r\n        camera.orthographicVerticalSize = 5.2;\r\n        camera.farPlane = 2000;\r\n        \r\n\r\n        \r\n        this.camera = camera;\r\n        this.cameraNode = cameraRootNode;\r\n        this.screen3DLayer = screenLayer;\r\n\r\n        \r\n        //创建平行光\r\n        let directionLight: Laya.DirectionLight =<Laya.DirectionLight> this.addChild(new Laya.DirectionLight());\r\n\t\tdirectionLight.color = new Laya.Vector3(1, 1, 1);\r\n\t\tthis.lightRotaitonSrc= directionLight.transform.localRotationEuler = new Laya.Vector3(125, 68, 106);\r\n\t\tthis.directionLight = directionLight;\r\n        \r\n\r\n        this.addChild(cameraRootNode);\r\n        this.addChild(directionLight);\r\n\r\n        this.lightRotaitonStart();\r\n        \r\n    }\r\n\r\n    lightRotaitonSrc:Vector3;\r\n    lightRotaiton:Vector3;\r\n    lightRotaitonStart()\r\n    {\r\n        this.lightRotaiton = this.directionLight.transform.localRotationEuler;\r\n        Laya.timer.frameLoop(1, this, this.onLightRotaitonLoop)\r\n    }\r\n\r\n    \r\n    lightRotaitonStop()\r\n    {\r\n        this.directionLight.transform.localRotationEuler = this.lightRotaitonSrc;\r\n        Laya.timer.clear(this, this.onLightRotaitonLoop)\r\n    }\r\n    \r\n    onLightRotaitonLoop()\r\n    {\r\n        this.lightRotaiton.x += 1;\r\n        this.lightRotaiton.y += 2;\r\n        this.lightRotaiton.z += 2;\r\n\r\n        this.directionLight.transform.localRotationEuler = this.lightRotaiton;\r\n    }\r\n    \r\n}\r\n\r\n","export enum MeshTextType\r\n{\r\n    White = \"White_\",\r\n    Red = \"Red_\",\r\n    Green = \"Green_\",\r\n    WhiteBig = \"WhiteBig_\",\r\n    YellowBig = \"YellowBig_\",\r\n\r\n}\r\n\r\nexport enum TextStyleType\r\n{\r\n    White = 0,\r\n    Red ,\r\n    Green ,\r\n    WhiteBig ,\r\n    YellowBig ,\r\n}","\r\nexport enum HorizontalAlignType\r\n{\r\n    Left,\r\n    Center,\r\n    Right\r\n}","import MeshTextAtlas from \"./MeshTextAtlas\";\r\nimport { HorizontalAlignType } from \"./HorizontalAlignType\";\r\n\r\nimport VertexDeclaration = Laya.VertexDeclaration;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport Mesh = Laya.Mesh;\r\n\r\nexport default class ToolMeshText\r\n{\r\n    \r\n    // static CreateTextMesh(text: string, hAlignType: HorizontalAlignType, atlas:MeshTextAtlas, atlaTypeKey?: any): Mesh\r\n    // {\r\n    //     var vertexDeclaration: VertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,UV\");\r\n    //     var vertices:float[] = [];\r\n    //     var indices:int[] = [];\r\n\r\n    //     let length = text.length;\r\n    //     var verticeCount = length << 2;\r\n    //     vertices.length = verticeCount * 5;\r\n    //     indices.length = (length << 1) * 3;\r\n        \r\n\r\n    //     this.SetVerticesBuffer(vertices,\r\n    //         text, hAlignType, atlas, atlaTypeKey\r\n    //     );\r\n    //     this.SetIndicesBuffer(indices);\r\n    //     var verticesBuffer: Float32Array = new Float32Array(vertices);\r\n    //     var indicesBuffer: Uint16Array = new Uint16Array(indices);\r\n\r\n    //     // console.log(\"text=\", text);\r\n    //     // console.log(\"indices.length=\", indices.length);\r\n    //     // console.log(\"indicesBuffer.length=\", indicesBuffer.length);\r\n    //     // console.log(\"verticeCount=\", verticeCount);\r\n    //     // console.log(\"verticesBuffer.length=\", verticesBuffer.length);\r\n    //     // console.log(verticesBuffer);\r\n    //     // console.log(indicesBuffer);\r\n\t// \treturn Laya.PrimitiveMesh._createMesh(vertexDeclaration, verticesBuffer, indicesBuffer);\r\n    // }\r\n\r\n    // static SetVerticesBuffer(verticesBuffer: Float32Array | Array<number>,  text: string, hAlignType: HorizontalAlignType, atlas:MeshTextAtlas, atlaTypeKey?: any)\r\n    // {\r\n    //     let length = text.length;\r\n    //     var verticeCount = length << 2;\r\n       \r\n    //     let offestH = 0;\r\n    //     switch(hAlignType)\r\n    //     {\r\n    //         case HorizontalAlignType.Center:\r\n    //             offestH = -(verticeCount >> 3);\r\n    //             break;\r\n    //         case HorizontalAlignType.Left:\r\n    //             offestH = 0;\r\n    //             break;\r\n    //         case HorizontalAlignType.Right:\r\n    //             offestH = -(verticeCount >> 2);\r\n    //             break;\r\n    //     }\r\n\r\n    //     let tmp:int = 0;\r\n    //     let tmp2: float = 0;\r\n    //     let r: float = 1;\r\n    //     let oncePosLength = 3;\r\n    //     let onceUVLength = 2;\r\n    //     let onceVerticeLength = oncePosLength /*pos*/ + onceUVLength /*uv*/;\r\n    //     for(var i = 0; i < verticeCount; i += 4)\r\n    //     {\r\n    //         tmp = (i + 1) % 2;\r\n    //         let s = text[ i / 4];\r\n            \r\n    //         var spriteData = atlas.GetFrame(s, atlaTypeKey);\r\n    //         if(spriteData == null)\r\n    //         {\r\n    //             console.warn(\"文字图集里没找到字符:\" + s);\r\n    //             continue;\r\n    //         }\r\n    //         var spriteUV = spriteData.frameUV;\r\n    //         r = spriteUV.r;\r\n\r\n    //         // pos: x,y,z\r\n    //         var iPos = i * onceVerticeLength;\r\n    //         // v0: left top\r\n    //         verticesBuffer[iPos + 0] = offestH;\r\n    //         verticesBuffer[iPos + 1] = tmp + 1;\r\n    //         verticesBuffer[iPos + 2] = 0;\r\n\r\n            \r\n\r\n\r\n    //         // v1: left bottom\r\n    //         iPos += onceVerticeLength;\r\n    //         verticesBuffer[iPos + 0] = offestH;\r\n    //         verticesBuffer[iPos + 1] = tmp;\r\n    //         verticesBuffer[iPos + 2] = 0;\r\n\r\n    //         offestH += r;\r\n\r\n    //         // v2: right top\r\n    //         iPos += onceVerticeLength;\r\n    //         verticesBuffer[iPos + 0] = offestH;\r\n    //         verticesBuffer[iPos + 1] = tmp + 1;\r\n    //         verticesBuffer[iPos + 2] = 0;\r\n\r\n    //         // v3: right bottom\r\n    //         iPos += onceVerticeLength;\r\n    //         verticesBuffer[iPos + 0] = offestH;\r\n    //         verticesBuffer[iPos + 1] = tmp;\r\n    //         verticesBuffer[iPos + 2] = 0;\r\n\r\n\r\n    //         // uv: x, y\r\n    //         var iUV = i * onceVerticeLength + oncePosLength;\r\n    //         // v0: left top\r\n    //         verticesBuffer[iUV + 0] = spriteUV.xMin;\r\n    //         verticesBuffer[iUV + 1] = spriteUV.yMin;\r\n\r\n    //         // v1: left bottom\r\n    //         iUV += onceVerticeLength;\r\n    //         verticesBuffer[iUV + 0] = spriteUV.xMin;\r\n    //         verticesBuffer[iUV + 1] = spriteUV.yMax;\r\n\r\n    //         // v2: right top\r\n    //         iUV += onceVerticeLength;\r\n    //         verticesBuffer[iUV + 0] = spriteUV.xMax;\r\n    //         verticesBuffer[iUV + 1] = spriteUV.yMin;\r\n    //         // v3: right bottom\r\n    //         iUV += onceVerticeLength;\r\n    //         verticesBuffer[iUV + 0] = spriteUV.xMax;\r\n    //         verticesBuffer[iUV + 1] = spriteUV.yMax;\r\n    //     }\r\n\r\n    // }\r\n\r\n    \r\n    // static RefreshTextMesh(mesh:Mesh, text: string, hAlignType: HorizontalAlignType, atlas:MeshTextAtlas, atlaTypeKey?: any)\r\n    // {\r\n    //     this.SetVerticesBuffer(mesh._vertexBuffer.getFloat32Data(),\r\n    //         text, hAlignType, atlas, atlaTypeKey\r\n    //     );\r\n    //     this.PushGPUVertexBuffer(mesh);\r\n    // }\r\n\r\n    \r\n    static SetIndicesBuffer(indicesBuffer: Uint16Array | Array<number>)\r\n    {\r\n        var tmp = 0;\r\n        for(var i = 0; i < indicesBuffer.length; i += 6)\r\n        {\r\n            tmp = (i / 3) << 1;\r\n            indicesBuffer[i + 0] = indicesBuffer[i + 3] = tmp;\r\n            indicesBuffer[i + 1] = indicesBuffer[i + 5] = tmp + 3;\r\n            indicesBuffer[i + 2] = tmp + 1;\r\n            indicesBuffer[i + 4] = tmp + 2;\r\n        }\r\n    }\r\n\r\n    \r\n    static SetVerticesSubBuffer(verticesBuffer: Float32Array | Array<number>, offset:number=0, itemSale: number, itemPosition:Laya.Vector3, text: string, hAlignType: HorizontalAlignType, atlas:MeshTextAtlas, atlaTypeKey?: any)\r\n    {\r\n        let length = text.length;\r\n        var verticeCount = length << 2;\r\n       \r\n        let offestH = 0;\r\n        switch(hAlignType)\r\n        {\r\n            case HorizontalAlignType.Center:\r\n                offestH = -(verticeCount >> 3);\r\n                break;\r\n            case HorizontalAlignType.Left:\r\n                offestH = 0;\r\n                break;\r\n            case HorizontalAlignType.Right:\r\n                offestH = -(verticeCount >> 2);\r\n                break;\r\n        }\r\n\r\n        let tmp:int = 0;\r\n        let tmp2: float = 0;\r\n        let r: float = 1;\r\n        let oncePosLength = 3;\r\n        let onceUVLength = 2;\r\n        let onceVerticeLength = oncePosLength /*pos*/ \r\n        + onceUVLength /*uv*/ \r\n        + onceUVLength /*uv1*/;\r\n        for(var i = 0; i < verticeCount; i += 4)\r\n        {\r\n            tmp = (i + 1) % 2;\r\n            let s = text[ i / 4];\r\n            \r\n            var spriteData = atlas.GetFrame(s, atlaTypeKey);\r\n            if(spriteData == null)\r\n            {\r\n                console.warn(\"文字图集里没找到字符:\" + s, \"type=\" + atlaTypeKey);\r\n                continue;\r\n            }\r\n            var spriteUV = spriteData.frameUV;\r\n            r = spriteUV.r;\r\n\r\n            // pos: x,y,z\r\n            var iPos = offset + i * onceVerticeLength;\r\n            // v0: left top\r\n            verticesBuffer[iPos + 0] = offestH * itemSale + itemPosition.x;\r\n            verticesBuffer[iPos + 1] = (tmp + 1) * itemSale + itemPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n            \r\n\r\n\r\n            // v1: left bottom\r\n            iPos += onceVerticeLength;\r\n            verticesBuffer[iPos + 0] = offestH * itemSale + itemPosition.x;\r\n            verticesBuffer[iPos + 1] = tmp * itemSale     + itemPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n            offestH += r;\r\n\r\n            // v2: right top\r\n            iPos += onceVerticeLength;\r\n            verticesBuffer[iPos + 0] = offestH * itemSale + itemPosition.x;\r\n            verticesBuffer[iPos + 1] = (tmp + 1) * itemSale + itemPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n            // v3: right bottom\r\n            iPos += onceVerticeLength;\r\n            verticesBuffer[iPos + 0] = offestH * itemSale + itemPosition.x;\r\n            verticesBuffer[iPos + 1] = tmp * itemSale     + itemPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n\r\n            // uv: x, y\r\n            var iUV = offset + i * onceVerticeLength + oncePosLength;\r\n            // v0: left top\r\n            verticesBuffer[iUV + 0] = spriteUV.xMin;\r\n            verticesBuffer[iUV + 1] = spriteUV.yMin;\r\n\r\n            // v1: left bottom\r\n            iUV += onceVerticeLength;\r\n            verticesBuffer[iUV + 0] = spriteUV.xMin;\r\n            verticesBuffer[iUV + 1] = spriteUV.yMax;\r\n\r\n            // v2: right top\r\n            iUV += onceVerticeLength;\r\n            verticesBuffer[iUV + 0] = spriteUV.xMax;\r\n            verticesBuffer[iUV + 1] = spriteUV.yMin;\r\n            // v3: right bottom\r\n            iUV += onceVerticeLength;\r\n            verticesBuffer[iUV + 0] = spriteUV.xMax;\r\n            verticesBuffer[iUV + 1] = spriteUV.yMax;\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    static SetVerticesSubBufferTween(verticesBuffer: Float32Array | Array<number>, offset:number=0, addPosition:Laya.Vector3, textLength: number)\r\n    {\r\n        let length = textLength;\r\n        var verticeCount = length << 2;\r\n       \r\n\r\n        let oncePosLength = 3;\r\n        let onceUVLength = 2;\r\n        let onceVerticeLength = oncePosLength /*pos*/ \r\n            + onceUVLength /*uv*/ \r\n            + onceUVLength /*uv1*/;\r\n        for(var i = 0; i < verticeCount; i += 4)\r\n        {\r\n           \r\n\r\n            // pos: x,y,z\r\n            var iPos = offset + i * onceVerticeLength;\r\n            // v0: left top\r\n            verticesBuffer[iPos + 0] += addPosition.x;\r\n            verticesBuffer[iPos + 1] += addPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n            \r\n\r\n\r\n            // v1: left bottom\r\n            iPos += onceVerticeLength;\r\n            verticesBuffer[iPos + 0] += addPosition.x;\r\n            verticesBuffer[iPos + 1] += addPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n\r\n            // v2: right top\r\n            iPos += onceVerticeLength;\r\n            verticesBuffer[iPos + 0] += addPosition.x;\r\n            verticesBuffer[iPos + 1] += addPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n            // v3: right bottom\r\n            iPos += onceVerticeLength;\r\n            verticesBuffer[iPos + 0] += addPosition.x;\r\n            verticesBuffer[iPos + 1] += addPosition.y;\r\n            // verticesBuffer[iPos + 2] = 0;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    static SetVerticesSubBufferTweenRate(verticesBuffer: Float32Array | Array<number>, offset:number=0, tweenRate:float, tweenRate2:float, textLength: number)\r\n    {\r\n        let length = textLength;\r\n        var verticeCount = length << 2;\r\n       \r\n\r\n        let oncePosLength = 3;\r\n        let onceUVLength = 2;\r\n        let onceVerticeLength = oncePosLength /*pos*/ \r\n            + onceUVLength /*uv*/ \r\n            + onceUVLength /*uv1*/;\r\n        for(var i = 0; i < verticeCount; i += 4)\r\n        {\r\n            \r\n            // uv: x, y\r\n            var iUV = offset + i * onceVerticeLength + oncePosLength + onceUVLength;\r\n            // v0: left top\r\n            verticesBuffer[iUV + 0] = tweenRate;\r\n            // verticesBuffer[iUV + 1] = tweenRate2;\r\n\r\n            // v1: left bottom\r\n            iUV += onceVerticeLength;\r\n            verticesBuffer[iUV + 0] = tweenRate;\r\n            // verticesBuffer[iUV + 1] = tweenRate2;\r\n\r\n            // v2: right top\r\n            iUV += onceVerticeLength;\r\n            verticesBuffer[iUV + 0] = tweenRate;\r\n            // verticesBuffer[iUV + 1] = tweenRate2;\r\n\r\n            // v3: right bottom\r\n            iUV += onceVerticeLength;\r\n            verticesBuffer[iUV + 0] = tweenRate;\r\n            // verticesBuffer[iUV + 1] = tweenRate2;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    static PushGPUVertexBuffer(mesh: Mesh)\r\n    {\r\n        var vertexBuffer = mesh._vertexBuffer;\r\n        var buffer = vertexBuffer.getUint8Data();\r\n        vertexBuffer.bind();\r\n        Laya.LayaGL.instance.bufferSubData(vertexBuffer._bufferType, 0, buffer);\r\n    }\r\n\r\n    \r\n}\r\n\r\nwindow['ToolMeshText'] = ToolMeshText;","import Mesh = Laya.Mesh;\r\nimport Vector3 = Laya.Vector3;\r\n\r\nimport MeshTextAtlas from \"./MeshTextAtlas\";\r\nimport ToolMeshText from \"./ToolMeshText\";\r\nimport { HorizontalAlignType } from \"./HorizontalAlignType\";\r\nimport MeshTextBatchMesh from \"./MeshTextBatchMesh\";\r\n\r\n\r\nexport default class MeshTextItem\r\n{\r\n    public meshTextBatchMesh: MeshTextBatchMesh;\r\n    public batchIndex:number = 0;\r\n    public verticeBeginIndex: number = 0;\r\n    public verticeEndIndex: number = 0;\r\n\r\n    public atlaTypeKey: any;\r\n    public hAlignType: HorizontalAlignType = HorizontalAlignType.Center;\r\n    public scale: number = 0.5;\r\n    private _text: string = \"\";\r\n\r\n    get verticesBuffer(): Float32Array\r\n    {\r\n        return this.meshTextBatchMesh.mesh._vertexBuffer.getFloat32Data();\r\n    }\r\n\r\n    get atlas(): MeshTextAtlas\r\n    {\r\n        return this.meshTextBatchMesh.atlas;\r\n    }\r\n\r\n\r\n    private textLength: number = 0;\r\n    public get Text():string\r\n    {\r\n        return this._text;\r\n    }\r\n\r\n    public set Text(value: string)\r\n    {\r\n        if(value === undefined || value === null)\r\n        {\r\n            value = \"\";\r\n        }\r\n        // if(this._text == value)\r\n        // {\r\n        //     return;\r\n        // }\r\n\r\n        this.textLength = value.length;\r\n        this._text = value;\r\n        \r\n        this.Reset();\r\n        ToolMeshText.SetVerticesSubBuffer(\r\n            this.verticesBuffer, \r\n            this.verticeBeginIndex,\r\n            this.scale,\r\n            this.position,\r\n            this._text,\r\n            this.hAlignType,\r\n            this.atlas,\r\n            this.atlaTypeKey\r\n        );\r\n        this.meshTextBatchMesh.isReshedMesh = true;\r\n    }\r\n\r\n    public position: Vector3 = new Vector3();\r\n    public itemDefaultBuffer:Float32Array;\r\n\r\n    constructor(meshTextBatchMesh: MeshTextBatchMesh, batchIndex:number, verticeBeginIndex: number, verticeEndIndex: number)\r\n    {\r\n        this.meshTextBatchMesh = meshTextBatchMesh;\r\n        this.batchIndex = batchIndex;\r\n        this.verticeBeginIndex = verticeBeginIndex;\r\n        this.verticeEndIndex = verticeEndIndex;\r\n        this.itemDefaultBuffer = meshTextBatchMesh.verticesBuffer.slice(verticeBeginIndex, verticeEndIndex);\r\n     \r\n    }\r\n\r\n    Reset()\r\n    {\r\n        this.tweenRate = 0;\r\n\r\n        this.verticesBuffer.set(this.itemDefaultBuffer, this.verticeBeginIndex);\r\n        this.meshTextBatchMesh.isReshedMesh = true;\r\n    }\r\n\r\n    public tweenRate = 0;\r\n    public StartTween()\r\n    {\r\n        this.tweenRate = 0;\r\n        this.tweenValue = 0;\r\n        this.meshTextBatchMesh.AddTweenItem(this);\r\n    }\r\n\r\n    public tweenSpeed: number = 1;\r\n    private speedRandom = Math.random() * 0.2 + 0.9;\r\n    private tweenValue = 0;\r\n    public UpdateTween(delta: number)\r\n    {\r\n        this.tweenRate += delta   * this.tweenSpeed * this.speedRandom;\r\n        // this.tweenValue = Mathf.Lerp(this.tweenValue, 1.0, this.tweenRate);\r\n        // this.tweenValue = Mathf.Lerp(0, 1.0, this.tweenRate);\r\n        // this.tweenValue = Mathf.Lerp(this.tweenValue * 0.25, 1.0, this.tweenRate);\r\n\r\n        ToolMeshText.SetVerticesSubBufferTweenRate(\r\n            this.verticesBuffer, \r\n            this.verticeBeginIndex,\r\n            this.tweenRate,\r\n            0,\r\n            this.textLength\r\n        );\r\n        this.meshTextBatchMesh.isReshedMesh = true;\r\n\r\n        if(this.tweenRate >= 1)\r\n        {\r\n            this.OnTweenEnd();\r\n        }\r\n    }\r\n\r\n    // public position1: Vector3 = new Vector3();\r\n    // public position2: Vector3 = new Vector3();\r\n    // public positionSub: Vector3 = new Vector3();\r\n    // public StartTweenPosition()\r\n    // {\r\n    //     this.tweenRate = 0;\r\n    //     this.position1.x = this.position.x;\r\n    //     this.position1.y = this.position.y;\r\n    //     this.position1.z = this.position.z;\r\n\r\n    //     this.position2.x = this.position.x;\r\n    //     this.position2.y = this.position.y + 2;\r\n    //     this.position2.z = this.position.z;\r\n\r\n    //     this.meshTextBatchMesh.AddTweenItem(this);\r\n        \r\n    // }\r\n\r\n    // public UpdateTweenPosition(delta: number)\r\n    // {\r\n    //     this.tweenRate += delta;\r\n    //     this.position.x = Mathf.Lerp(this.position.x, this.position2.x, this.tweenRate);\r\n    //     this.position.y = Mathf.Lerp(this.position.y, this.position2.y, this.tweenRate);\r\n    //     this.position.z = Mathf.Lerp(this.position.z, this.position2.z, this.tweenRate);\r\n    //     this.positionSub.x = this.position.x - this.position1.x;\r\n    //     this.positionSub.y = this.position.y - this.position1.y;\r\n    //     this.positionSub.z = this.position.z - this.position1.z;\r\n        \r\n    //     this.position1.x = this.position.x;\r\n    //     this.position1.y = this.position.y;\r\n    //     this.position1.z = this.position.z;\r\n\r\n    //     ToolMeshText.SetVerticesSubBufferTween(\r\n    //         this.verticesBuffer, \r\n    //         this.verticeBeginIndex,\r\n    //         this.positionSub,\r\n    //         this.textLength\r\n    //     );\r\n    //     this.meshTextBatchMesh.isReshedMesh = true;\r\n\r\n    //     if(this.tweenRate >= 0.5)\r\n    //     {\r\n    //         this.RecoverPool();\r\n    //     }\r\n    // }\r\n\r\n    OnTweenEnd()\r\n    {\r\n        if(this.meshTextBatchMesh.debugItemLoop)\r\n        {\r\n            this.StartTween();\r\n            return;\r\n        }\r\n        this.RecoverPool();\r\n    }\r\n\r\n    public RecoverPool()\r\n    {\r\n        this.Reset();\r\n        this.meshTextBatchMesh.RemoveTweenItem(this);\r\n        this.meshTextBatchMesh.RecoverItem(this);\r\n    }\r\n\r\n\r\n\r\n\r\n}","import Mesh = Laya.Mesh;\r\nimport VertexDeclaration = Laya.VertexDeclaration;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ToolMeshText from \"./ToolMeshText\";\r\nimport MeshTextItem from \"./MeshTextItem\";\r\nimport MeshTextAtlas from \"./MeshTextAtlas\";\r\nimport MeshTextBatchSprite from \"./MeshTextBatchSprite\";\r\nexport default class MeshTextBatchMesh \r\n{\r\n    debugItemLoop: boolean = false;\r\n    private static UID = 0;\r\n    uid: number = 0;\r\n    private itemPoolKey: string;\r\n    mesh:Mesh;\r\n    onceTextLength:number = 10;\r\n    maxTextNum = 100;\r\n    stringMaxLength = 10 * 100;\r\n    verticesBuffer: Float32Array;\r\n    indicesBuffer: Uint16Array;\r\n    isReshedMesh: boolean = false;\r\n\r\n    \r\n    public atlas: MeshTextAtlas;\r\n    constructor(atlas: MeshTextAtlas, onceTextLength:number = 5, maxTextNum: number = 50)\r\n    {\r\n        this.uid = MeshTextBatchMesh.UID ++;\r\n        this.itemPoolKey = \"MeshTextItem__\" + this.uid;\r\n\r\n        this.atlas = atlas;\r\n        var stringMaxLength = onceTextLength * maxTextNum;\r\n        this.onceTextLength = onceTextLength;\r\n        this.maxTextNum = maxTextNum;\r\n        this.stringMaxLength = stringMaxLength;\r\n\r\n        var onceTextVerticeCount = (onceTextLength << 2) * 7;\r\n        var verticeCount = (stringMaxLength << 2) * 7;\r\n        var indicesCount = (stringMaxLength << 1) * 3;\r\n\r\n        var vertexDeclaration: VertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,UV,UV1\");\r\n        var verticesBuffer: Float32Array = new Float32Array(verticeCount);\r\n        var indicesBuffer: Uint16Array = new Uint16Array(indicesCount);\r\n        ToolMeshText.SetIndicesBuffer(indicesBuffer);\r\n\r\n        // uv2.y\r\n        for(var i = 0; i < stringMaxLength; i ++)\r\n        {\r\n            for(var v = 0; v < 4; v ++)\r\n            {\r\n                var ii = i * 4 + v;\r\n                ii = ii * 7 + 6;\r\n                verticesBuffer[ii] = Math.random();\r\n            }\r\n        }\r\n\r\n\r\n        this.verticesBuffer = verticesBuffer;\r\n        this.indicesBuffer = indicesBuffer;\r\n        this.mesh = Laya.PrimitiveMesh._createMesh(vertexDeclaration, verticesBuffer, indicesBuffer);\r\n        \r\n        for(var i = maxTextNum - 1; i >= 0; i --)\r\n        {\r\n            var verticeBeginIndex: number = i * onceTextVerticeCount;\r\n            var verticeEndIndex: number = (i + 1) * onceTextVerticeCount;\r\n            var item = new MeshTextItem(this, i, verticeBeginIndex, verticeEndIndex);\r\n            Laya.Pool.recover(this.itemPoolKey, item);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    textItemCache: Map<any, Map<string, MeshTextItem[]>> = new Map<any, Map<string, MeshTextItem[]>>();\r\n\r\n    GetItemCacheByType(text: string, atlaTypeKey: any):MeshTextItem[]\r\n    {\r\n        var typeMap: Map<string, MeshTextItem[]>;\r\n        if(this.textItemCache.has(atlaTypeKey))\r\n        {\r\n            typeMap = this.textItemCache.get(atlaTypeKey);\r\n        }\r\n        else\r\n        {\r\n            typeMap = new Map<string, MeshTextItem[]>();\r\n            this.textItemCache.set(atlaTypeKey, typeMap);\r\n        }\r\n\r\n        if(typeMap.has(text))\r\n        {\r\n            return typeMap.get(text);\r\n        }\r\n        else\r\n        {\r\n            var list = [];\r\n            typeMap.set(text, list);\r\n            return list;\r\n        }\r\n    }\r\n\r\n    RecoverItemCache(item:MeshTextItem)\r\n    {\r\n        var list = this.GetItemCacheByType(item.Text, item.atlaTypeKey);\r\n        list.push(item);\r\n    }\r\n\r\n    \r\n    RemoveFromItemCache(item:MeshTextItem)\r\n    {\r\n        if(!item.atlaTypeKey)\r\n        {\r\n            return;\r\n        }\r\n        var list = this.GetItemCacheByType(item.Text, item.atlaTypeKey);\r\n        var i = list.indexOf(item);\r\n        if(i != -1)\r\n        {\r\n            list.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    GetItemCache(text: string, atlaTypeKey: any):MeshTextItem\r\n    {\r\n        var list = this.GetItemCacheByType(text, atlaTypeKey);\r\n        if(list.length > 0)\r\n        {\r\n            var item = list.shift();\r\n            var pool = Laya.Pool.getPoolBySign(this.itemPoolKey);\r\n            var i = pool.indexOf(item);\r\n            if(i != -1)\r\n            {\r\n                pool.splice(i, 1);\r\n            }\r\n            return item;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    useItemList:MeshTextItem[] = [];\r\n    GetItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0):MeshTextItem\r\n    {\r\n        // var item:MeshTextItem = this.GetItemCache(text, atlaTypeKey);\r\n        // if(item == null)\r\n        // {\r\n            var item = Laya.Pool.getItem(this.itemPoolKey);\r\n            if(item)\r\n            {\r\n                this.RemoveFromItemCache(item);\r\n            }\r\n        // }\r\n\r\n\r\n        if(item == null)\r\n        {\r\n            if(this.useItemList.length > 0)\r\n            {\r\n                item = this.useItemList.shift();\r\n                item.Reset();\r\n                this.RemoveTweenItem(item);\r\n                this.RemoveFromItemCache(item);\r\n                // item.RecoverPool();\r\n            }\r\n        }\r\n        \r\n        if(this.atlas.typeScaleMap.has(atlaTypeKey))\r\n        {\r\n            scale = this.atlas.typeScaleMap.get(atlaTypeKey);\r\n        }\r\n        item.atlaTypeKey = atlaTypeKey;\r\n        item.position = position;\r\n        item.scale = scale;\r\n        item.Text = text;\r\n        this.useItemList.push(item);\r\n        return item;\r\n    } \r\n\r\n    PlayItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0, tweenSpeed:number = 1.0):MeshTextItem\r\n    {\r\n        var item:MeshTextItem = this.GetItem(text, position, atlaTypeKey, scale);\r\n        item.tweenSpeed = tweenSpeed;\r\n        item.StartTween();\r\n        return item;\r\n    }\r\n\r\n    private RemoveUseFromList(item:MeshTextItem)\r\n    {\r\n\r\n        var index = this.useItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.useItemList.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    RecoverItem(item:MeshTextItem)\r\n    {\r\n        // this.RecoverItemCache(item);\r\n        Laya.Pool.recover(this.itemPoolKey, item);\r\n        this.RemoveUseFromList(item);\r\n    }\r\n\r\n    tweenItemList: MeshTextItem[] = [];\r\n\r\n    AddTweenItem(item:MeshTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index == -1)\r\n        {\r\n            this.tweenItemList.push(item);\r\n        }\r\n    }\r\n\r\n    RemoveTweenItem(item:MeshTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.tweenItemList.splice(index, 1);\r\n        }\r\n    }\r\n    StartUpdate()\r\n    {\r\n        Laya.timer.frameLoop(1, this, this.OnLoop);\r\n    }\r\n\r\n    StopUpdate()\r\n    {\r\n        Laya.timer.clear(this, this.OnLoop);\r\n    }\r\n\r\n    OnLoop()\r\n    {\r\n        if(this.isReshedMesh)\r\n        {\r\n            ToolMeshText.PushGPUVertexBuffer(this.mesh);\r\n            // console.log(\"PushGPUVertexBuffer\");\r\n            this.isReshedMesh = false;\r\n        }\r\n        var delta = Laya.timer.delta * 0.001;\r\n        for(var i = this.tweenItemList.length - 1; i >= 0; i --)\r\n        {\r\n            var item = this.tweenItemList[i];\r\n            item.UpdateTween(delta);\r\n        }\r\n    }\r\n\r\n    sprite:MeshTextBatchSprite;\r\n\r\n    \r\n    camera: Laya.Camera;\r\n    __parent: Laya.Node;\r\n    __parentIndex:number;\r\n    SetParent(parent: Laya.Node, parentIndex?:number)\r\n    {\r\n        this.__parent = parent;\r\n        this.__parentIndex = parentIndex;\r\n    }\r\n\r\n\r\n    Show()\r\n    {\r\n        if(this.__parentIndex != undefined)\r\n        {\r\n            this.__parent.addChildAt(this.sprite, this.__parentIndex);\r\n        }\r\n        else\r\n        {\r\n            this.__parent.addChild(this.sprite);\r\n        }\r\n        this.StartUpdate();\r\n    }\r\n\r\n    Hide()\r\n    {\r\n        this.Clear();\r\n        this.sprite.removeSelf();\r\n        this.StopUpdate();\r\n    }\r\n\r\n    Clear()\r\n    {\r\n        while(this.useItemList.length > 0)\r\n        {\r\n            var item = this.useItemList.shift();\r\n            item.RecoverPool();\r\n        }\r\n        this.tweenItemList.length = 0;\r\n    }\r\n\r\n}","import MeshTextAtlas from \"./MeshTextAtlas\";\r\nimport { HorizontalAlignType } from \"./HorizontalAlignType\";\r\nimport MeshTextBatchMesh from \"./MeshTextBatchMesh\";\r\nimport ToolMeshText from \"./ToolMeshText\";\r\n\r\nexport default class MeshTextBatchSprite extends Laya.MeshSprite3D \r\n{\r\n    batchMesh:MeshTextBatchMesh;\r\n    constructor(batchMesh: MeshTextBatchMesh, name?:string )\r\n    {\r\n        super(batchMesh.mesh, name);\r\n        this.batchMesh = batchMesh;\r\n        this.meshRenderer.bounds.setMin(new Laya.Vector3(-999999,-999999, -999999));\r\n        this.meshRenderer.bounds.setMax(new Laya.Vector3(999999, 999999, 999999));\r\n    }\r\n\r\n\r\n\r\n}","import Shader3D = Laya.Shader3D;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\n\r\n\r\nexport class BaseMaterial extends Laya.Material\r\n{\r\n    static SHADER_PATH_ROOT = \"res/shaders/\";\r\n    \r\n    // 获取--Shader路径--vs\r\n    static getShaderVS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".vs\";\r\n    }\r\n\r\n    // 获取--Shader路径--ps\r\n    static getShaderPS(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".fs\";\r\n    }\r\n\r\n    \r\n    // 获取--Shader路径--glsl\r\n    static getShaderGLSL(filename: string)\r\n    {\r\n        return this.SHADER_PATH_ROOT + filename  + \".glsl\";\r\n    }\r\n\r\n    \r\n    // 加载Shader\r\n    static async loadShaderGlslAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderGLSL(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n    \r\n    // 加载Shader\r\n    static async loadShaderVSAsync(filename: string): Promise<string>\r\n    {\r\n        let code = await this.loadAsync(this.getShaderVS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    // 加载Shader\r\n    static async loadShaderPSAsync(filename: string): Promise<string>\r\n    {\r\n        let code =  await this.loadAsync(this.getShaderPS(filename), Laya.Loader.TEXT);\r\n        return code.replace(/\\r/g, \"\");\r\n    }\r\n\r\n    \r\n    // 加载资源, 异步\r\n    static async loadAsync(path: string, type: string): Promise<any>\r\n    {\r\n        return new Promise<any>((resolve)=>\r\n        {\r\n            Laya.loader.load(path, \r\n                Laya.Handler.create(null, (res: any) =>\r\n                {\r\n                    resolve(res);\r\n                }), \r\n                null, type);\r\n         });\r\n    }\r\n\r\n\r\n\r\n}","\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\nimport { BaseMaterial } from \"./BaseMaterial\";\r\n\r\n\r\n\r\nexport class MeshTextBatchTweenMaterial extends BaseMaterial\r\n{\r\n    \r\n    /** Shader名称 */\r\n    public static shaderName = \"MeshTextBatchTween\";\r\n\r\n\tprivate static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(MeshTextBatchTweenMaterial._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tMeshTextBatchTweenMaterial._isInstalled = true;\r\n        MeshTextBatchTweenMaterial.__initDefine__();\r\n        await MeshTextBatchTweenMaterial.initShader();\r\n\r\n        MeshTextBatchTweenMaterial.defaultMaterial = new MeshTextBatchTweenMaterial();\r\n        MeshTextBatchTweenMaterial.defaultMaterial.lock = true;\r\n    }\r\n\r\n    private static async initShader()\r\n    {\r\n        var vs: string = await MeshTextBatchTweenMaterial.loadShaderVSAsync(MeshTextBatchTweenMaterial.shaderName);\r\n        var ps: string = await MeshTextBatchTweenMaterial.loadShaderPSAsync(MeshTextBatchTweenMaterial.shaderName);\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_Texcoord0': VertexMesh.MESH_TEXTURECOORDINATE0,\r\n\t\t\t'a_Texcoord1': VertexMesh.MESH_TEXTURECOORDINATE1,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t'u_AlbedoTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlbedoColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_TilingOffset': Shader3D.PERIOD_MATERIAL,\r\n            'u_AlphaTestValue': Shader3D.PERIOD_MATERIAL,\r\n            'u_TweenPositionBegin': Shader3D.PERIOD_MATERIAL,\r\n            'u_TweenPositionEnd': Shader3D.PERIOD_MATERIAL,\r\n            \r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(MeshTextBatchTweenMaterial.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n        shader.addSubShader(subShader);\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        // mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n\t\r\n\t/**渲染状态_不透明。*/\r\n\tstatic RENDERMODE_OPAQUE: number = 0;\r\n\t/**渲染状态_阿尔法测试。*/\r\n\tstatic RENDERMODE_CUTOUT: number = 1;\r\n\t/**渲染状态__透明混合。*/\r\n\tstatic RENDERMODE_TRANSPARENT: number = 2;\r\n\t/**渲染状态__加色法混合。*/\r\n\tstatic RENDERMODE_ADDTIVE: number = 3;\r\n\r\n\tstatic SHADERDEFINE_ALBEDOTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_TILINGOFFSET: ShaderDefine;\r\n\tstatic SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;\r\n\r\n\tstatic ALBEDOTEXTURE: number = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tstatic TILINGOFFSET: number = Shader3D.propertyNameToID(\"u_TilingOffset\");\r\n\tstatic TWEEN_POSITION_BEGIN: number = Shader3D.propertyNameToID(\"u_TweenPositionBegin\");\r\n\tstatic TWEEN_POSITION_END: number = Shader3D.propertyNameToID(\"u_TweenPositionEnd\");\r\n\tstatic CULL: number = Shader3D.propertyNameToID(\"s_Cull\");\r\n\tstatic BLEND: number = Shader3D.propertyNameToID(\"s_Blend\");\r\n\tstatic BLEND_SRC: number = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n\tstatic BLEND_DST: number = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n\tstatic DEPTH_TEST: number = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n\tstatic DEPTH_WRITE: number = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n\r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: MeshTextBatchTweenMaterial;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\t\tMeshTextBatchTweenMaterial.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\r\n\t\tMeshTextBatchTweenMaterial.SHADERDEFINE_TILINGOFFSET = Shader3D.getDefineByName(\"TILINGOFFSET\");\r\n\t\tMeshTextBatchTweenMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\r\n\t}\r\n\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\tprivate _albedoIntensity: number = 1.0;\r\n\tprivate _enableVertexColor: boolean = false;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorR(): number {\r\n\t\treturn this._albedoColor.x;\r\n\t}\r\n\r\n\tset _ColorR(value: number) {\r\n\t\tthis._albedoColor.x = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorG(): number {\r\n\t\treturn this._albedoColor.y;\r\n\t}\r\n\r\n\tset _ColorG(value: number) {\r\n\t\tthis._albedoColor.y = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorB(): number {\r\n\t\treturn this._albedoColor.z;\r\n\t}\r\n\r\n\tset _ColorB(value: number) {\r\n\t\tthis._albedoColor.z = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal \r\n\t */\r\n\tget _ColorA(): number {\r\n\t\treturn this._albedoColor.w;\r\n\t}\r\n\r\n\tset _ColorA(value: number) {\r\n\t\tthis._albedoColor.w = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _AlbedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset _AlbedoIntensity(value: number) {\r\n\t\tif (this._albedoIntensity !== value) {\r\n\t\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenMaterial.ALBEDOCOLOR));\r\n\t\t\tVector4.scale(this._albedoColor, value, finalAlbedo);\r\n\t\t\tthis._albedoIntensity = value;\r\n\t\t\tthis._shaderValues.setVector(MeshTextBatchTweenMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STX(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET).x;\r\n\t}\r\n\r\n\tset _MainTex_STX(x: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET));\r\n\t\ttilOff.x = x;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STY(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET).y;\r\n\t}\r\n\r\n\tset _MainTex_STY(y: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET));\r\n\t\ttilOff.y = y;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STZ(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET).z;\r\n\t}\r\n\r\n\tset _MainTex_STZ(z: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET));\r\n\t\ttilOff.z = z;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STW(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET).w;\r\n\t}\r\n\r\n\tset _MainTex_STW(w: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET));\r\n\t\ttilOff.w = w;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _Cutoff(): number {\r\n\t\treturn this.alphaTestValue;\r\n\t}\r\n\r\n\tset _Cutoff(value: number) {\r\n\t\tthis.alphaTestValue = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色R分量。\r\n\t */\r\n\tget albedoColorR(): number {\r\n\t\treturn this._ColorR;\r\n\t}\r\n\r\n\tset albedoColorR(value: number) {\r\n\t\tthis._ColorR = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色G分量。\r\n\t */\r\n\tget albedoColorG(): number {\r\n\t\treturn this._ColorG;\r\n\t}\r\n\r\n\tset albedoColorG(value: number) {\r\n\t\tthis._ColorG = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色B分量。\r\n\t */\r\n\tget albedoColorB(): number {\r\n\t\treturn this._ColorB;\r\n\t}\r\n\r\n\tset albedoColorB(value: number) {\r\n\t\tthis._ColorB = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色Z分量。\r\n\t */\r\n\tget albedoColorA(): number {\r\n\t\treturn this._ColorA;\r\n\t}\r\n\r\n\tset albedoColorA(value: number) {\r\n\t\tthis._ColorA = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenMaterial.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, this._albedoIntensity, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率强度。\r\n\t */\r\n\tget albedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset albedoIntensity(value: number) {\r\n\t\tthis._AlbedoIntensity = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率贴图。\r\n\t */\r\n\tget albedoTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(MeshTextBatchTweenMaterial.ALBEDOTEXTURE);\r\n\t}\r\n\r\n\tset albedoTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(MeshTextBatchTweenMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\tthis._shaderValues.setTexture(MeshTextBatchTweenMaterial.ALBEDOTEXTURE, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移X分量。\r\n\t */\r\n\tget tilingOffsetX(): number {\r\n\t\treturn this._MainTex_STX;\r\n\t}\r\n\r\n\tset tilingOffsetX(x: number) {\r\n\t\tthis._MainTex_STX = x;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Y分量。\r\n\t */\r\n\tget tilingOffsetY(): number {\r\n\t\treturn this._MainTex_STY;\r\n\t}\r\n\r\n\tset tilingOffsetY(y: number) {\r\n\t\tthis._MainTex_STY = y;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Z分量。\r\n\t */\r\n\tget tilingOffsetZ(): number {\r\n\t\treturn this._MainTex_STZ;\r\n\t}\r\n\r\n\tset tilingOffsetZ(z: number) {\r\n\t\tthis._MainTex_STZ = z;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移W分量。\r\n\t */\r\n\tget tilingOffsetW(): number {\r\n\t\treturn this._MainTex_STW;\r\n\t}\r\n\r\n\tset tilingOffsetW(w: number) {\r\n\t\tthis._MainTex_STW = w;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移。\r\n\t */\r\n\tget tilingOffset(): Vector4 {\r\n\t\treturn (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenMaterial.TILINGOFFSET));\r\n\t}\r\n\r\n\tset tilingOffset(value: Vector4) {\r\n\t\tif (value) {\r\n\t\t\tif (value.x != 1 || value.y != 1 || value.z != 0 || value.w != 0)\r\n\t\t\t\tthis._shaderValues.addDefine(MeshTextBatchTweenMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t\telse\r\n\t\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t} else {\r\n\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t}\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenMaterial.TILINGOFFSET, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否支持顶点色。\r\n\t */\r\n\tget enableVertexColor(): boolean {\r\n\t\treturn this._enableVertexColor;\r\n\t}\r\n\r\n\tset enableVertexColor(value: boolean) {\r\n\t\tthis._enableVertexColor = value;\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(MeshTextBatchTweenMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t}\r\n\r\n\t/**\r\n\t * 渲染模式。\r\n\t */\r\n\tset renderMode(value: number) {\r\n\t\tswitch (value) {\r\n\t\t\tcase MeshTextBatchTweenMaterial.RENDERMODE_OPAQUE:\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MeshTextBatchTweenMaterial.RENDERMODE_CUTOUT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n\t\t\t\tthis.alphaTest = true;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MeshTextBatchTweenMaterial.RENDERMODE_TRANSPARENT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.depthWrite = false;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_ENABLE_ALL;\r\n\t\t\t\tthis.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n\t\t\t\tthis.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"MeshTextBatchTweenMaterial : renderMode value error.\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 是否写入深度。\r\n\t */\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._shaderValues.getBool(MeshTextBatchTweenMaterial.DEPTH_WRITE);\r\n\t}\r\n\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._shaderValues.setBool(MeshTextBatchTweenMaterial.DEPTH_WRITE, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 剔除方式。\r\n\t */\r\n\tget cull(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenMaterial.CULL);\r\n\t}\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenMaterial.CULL, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合方式。\r\n\t */\r\n\tget blend(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenMaterial.BLEND);\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenMaterial.BLEND, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合源。\r\n\t */\r\n\tget blendSrc(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenMaterial.BLEND_SRC);\r\n\t}\r\n\r\n\tset blendSrc(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenMaterial.BLEND_SRC, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 混合目标。\r\n\t */\r\n\tget blendDst(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenMaterial.BLEND_DST);\r\n\t}\r\n\r\n\tset blendDst(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenMaterial.BLEND_DST, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 深度测试方式。\r\n\t */\r\n\tget depthTest(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenMaterial.DEPTH_TEST);\r\n\t}\r\n\r\n\tset depthTest(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenMaterial.DEPTH_TEST, value);\r\n\t}\r\n\r\n\t\r\n\tprivate _tweenPositionEnd: Vector4 = new Vector4(0.25, 1.0, 0.0, 0.0);\r\n\tget tweenPositionEnd(): Vector4 {\r\n\t\treturn this._tweenPositionEnd;\r\n\t}\r\n\r\n\tset tweenPositionEnd(value: Vector4) {\r\n\t\tthis._tweenPositionEnd = value;\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenMaterial.TWEEN_POSITION_END, value);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setShaderName(MeshTextBatchTweenMaterial.shaderName);\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenMaterial.ALBEDOCOLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenMaterial.TWEEN_POSITION_BEGIN, new Vector4(0.0, 0.0, 0.0, 0.0));\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenMaterial.TWEEN_POSITION_END, this._tweenPositionEnd);\r\n\t\tthis.renderMode = MeshTextBatchTweenMaterial.RENDERMODE_TRANSPARENT;\r\n\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: MeshTextBatchTweenMaterial = new MeshTextBatchTweenMaterial();\r\n\t\tthis.cloneTo(dest);\r\n\t\tdest._albedoIntensity = this._albedoIntensity;\r\n        this._albedoColor.cloneTo(dest._albedoColor);\r\n\t\treturn dest;\r\n\t}\r\n\r\n}","\r\nimport Shader3D = Laya.Shader3D;\r\nimport SubShader = Laya.SubShader;\r\nimport SkinnedMeshSprite3D = Laya.SkinnedMeshSprite3D;\r\nimport VertexMesh = Laya.VertexMesh;\r\nimport ShaderDefine = Laya.ShaderDefine;\r\nimport Vector4 = Laya.Vector4;\r\nimport RenderState = Laya.RenderState;\r\nimport Scene3DShaderDeclaration = Laya.Scene3DShaderDeclaration;\r\nimport BaseTexture = Laya.BaseTexture;\r\nimport Material = Laya.Material;\r\nimport { BaseMaterial } from \"./BaseMaterial\";\r\n\r\n\r\n\r\nexport class MeshTextBatchTweenSeparateMaterial extends BaseMaterial\r\n{\r\n    \r\n    /** Shader名称 */\r\n    public static shaderName = \"MeshTextBatchTweenSeparate\";\r\n\r\n\tprivate static _isInstalled: boolean = false;\r\n    public static async install()\r\n    {\r\n\t\tif(MeshTextBatchTweenSeparateMaterial._isInstalled)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tMeshTextBatchTweenSeparateMaterial._isInstalled = true;\r\n        MeshTextBatchTweenSeparateMaterial.__initDefine__();\r\n        await MeshTextBatchTweenSeparateMaterial.initShader();\r\n\r\n        MeshTextBatchTweenSeparateMaterial.defaultMaterial = new MeshTextBatchTweenSeparateMaterial();\r\n        MeshTextBatchTweenSeparateMaterial.defaultMaterial.lock = true;\r\n    }\r\n\r\n    private static async initShader()\r\n    {\r\n        var vs: string = await MeshTextBatchTweenSeparateMaterial.loadShaderVSAsync(MeshTextBatchTweenSeparateMaterial.shaderName);\r\n        var ps: string = await MeshTextBatchTweenSeparateMaterial.loadShaderPSAsync(\"MeshTextBatchTween\");\r\n        \r\n        \r\n        var attributeMap: object;\r\n        var uniformMap: object;\r\n        var stateMap: object;\r\n        var shader:Shader3D;\r\n        var subShader:SubShader;\r\n\r\n        attributeMap = \r\n        {\r\n\t\t\t'a_Position': VertexMesh.MESH_POSITION0,\r\n\t\t\t'a_Color': VertexMesh.MESH_COLOR0,\r\n\t\t\t'a_Texcoord0': VertexMesh.MESH_TEXTURECOORDINATE0,\r\n\t\t\t'a_Texcoord1': VertexMesh.MESH_TEXTURECOORDINATE1,\r\n\t\t\t'a_MvpMatrix': VertexMesh.MESH_MVPMATRIX_ROW0\r\n\t\t};\r\n\r\n        uniformMap = \r\n        {\r\n\t\t\t'u_AlbedoTexture': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_AlbedoColor': Shader3D.PERIOD_MATERIAL,\r\n\t\t\t'u_TilingOffset': Shader3D.PERIOD_MATERIAL,\r\n            'u_AlphaTestValue': Shader3D.PERIOD_MATERIAL,\r\n            'u_TweenPositionBegin': Shader3D.PERIOD_MATERIAL,\r\n            'u_TweenPositionEnd': Shader3D.PERIOD_MATERIAL,\r\n            \r\n            'u_MvpMatrix': Shader3D.PERIOD_SPRITE,\r\n            \r\n\t\t\t'u_FogStart': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogRange': Shader3D.PERIOD_SCENE,\r\n\t\t\t'u_FogColor': Shader3D.PERIOD_SCENE\r\n\t\t};\r\n\r\n        stateMap = \r\n        {\r\n\t\t\t's_Cull': Shader3D.RENDER_STATE_CULL,\r\n\t\t\t's_Blend': Shader3D.RENDER_STATE_BLEND,\r\n\t\t\t's_BlendSrc': Shader3D.RENDER_STATE_BLEND_SRC,\r\n\t\t\t's_BlendDst': Shader3D.RENDER_STATE_BLEND_DST,\r\n\t\t\t's_DepthTest': Shader3D.RENDER_STATE_DEPTH_TEST,\r\n\t\t\t's_DepthWrite': Shader3D.RENDER_STATE_DEPTH_WRITE\r\n\t\t};\r\n\r\n        \r\n        shader = Shader3D.add(MeshTextBatchTweenSeparateMaterial.shaderName, null, null, true);\r\n        subShader =  new SubShader(attributeMap, uniformMap);\r\n        shader.addSubShader(subShader);\r\n        \r\n\r\n        var mainPass =  subShader.addShaderPass(vs, ps, stateMap);\r\n        // mainPass.renderState.cull = Laya.RenderState.CULL_BACK;\r\n        \r\n        \r\n    }\r\n\r\n\t\r\n\t/**渲染状态_不透明。*/\r\n\tstatic RENDERMODE_OPAQUE: number = 0;\r\n\t/**渲染状态_阿尔法测试。*/\r\n\tstatic RENDERMODE_CUTOUT: number = 1;\r\n\t/**渲染状态__透明混合。*/\r\n\tstatic RENDERMODE_TRANSPARENT: number = 2;\r\n\t/**渲染状态__加色法混合。*/\r\n\tstatic RENDERMODE_ADDTIVE: number = 3;\r\n\r\n\tstatic SHADERDEFINE_ALBEDOTEXTURE: ShaderDefine;\r\n\tstatic SHADERDEFINE_TILINGOFFSET: ShaderDefine;\r\n\tstatic SHADERDEFINE_ENABLEVERTEXCOLOR: ShaderDefine;\r\n\r\n\tstatic ALBEDOTEXTURE: number = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\r\n\tstatic ALBEDOCOLOR: number = Shader3D.propertyNameToID(\"u_AlbedoColor\");\r\n\tstatic TILINGOFFSET: number = Shader3D.propertyNameToID(\"u_TilingOffset\");\r\n\tstatic TWEEN_POSITION_BEGIN: number = Shader3D.propertyNameToID(\"u_TweenPositionBegin\");\r\n\tstatic TWEEN_POSITION_END: number = Shader3D.propertyNameToID(\"u_TweenPositionEnd\");\r\n\tstatic CULL: number = Shader3D.propertyNameToID(\"s_Cull\");\r\n\tstatic BLEND: number = Shader3D.propertyNameToID(\"s_Blend\");\r\n\tstatic BLEND_SRC: number = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n\tstatic BLEND_DST: number = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n\tstatic DEPTH_TEST: number = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n\tstatic DEPTH_WRITE: number = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n\r\n\t/** 默认材质，禁止修改*/\r\n\tstatic defaultMaterial: MeshTextBatchTweenSeparateMaterial;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __initDefine__(): void {\r\n\t\tMeshTextBatchTweenSeparateMaterial.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\r\n\t\tMeshTextBatchTweenSeparateMaterial.SHADERDEFINE_TILINGOFFSET = Shader3D.getDefineByName(\"TILINGOFFSET\");\r\n\t\tMeshTextBatchTweenSeparateMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\r\n\t}\r\n\r\n\tprivate _albedoColor: Vector4 = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\tprivate _albedoIntensity: number = 1.0;\r\n\tprivate _enableVertexColor: boolean = false;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorR(): number {\r\n\t\treturn this._albedoColor.x;\r\n\t}\r\n\r\n\tset _ColorR(value: number) {\r\n\t\tthis._albedoColor.x = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorG(): number {\r\n\t\treturn this._albedoColor.y;\r\n\t}\r\n\r\n\tset _ColorG(value: number) {\r\n\t\tthis._albedoColor.y = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _ColorB(): number {\r\n\t\treturn this._albedoColor.z;\r\n\t}\r\n\r\n\tset _ColorB(value: number) {\r\n\t\tthis._albedoColor.z = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal \r\n\t */\r\n\tget _ColorA(): number {\r\n\t\treturn this._albedoColor.w;\r\n\t}\r\n\r\n\tset _ColorA(value: number) {\r\n\t\tthis._albedoColor.w = value;\r\n\t\tthis.albedoColor = this._albedoColor;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _AlbedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset _AlbedoIntensity(value: number) {\r\n\t\tif (this._albedoIntensity !== value) {\r\n\t\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.ALBEDOCOLOR));\r\n\t\t\tVector4.scale(this._albedoColor, value, finalAlbedo);\r\n\t\t\tthis._albedoIntensity = value;\r\n\t\t\tthis._shaderValues.setVector(MeshTextBatchTweenSeparateMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STX(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET).x;\r\n\t}\r\n\r\n\tset _MainTex_STX(x: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET));\r\n\t\ttilOff.x = x;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STY(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET).y;\r\n\t}\r\n\r\n\tset _MainTex_STY(y: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET));\r\n\t\ttilOff.y = y;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STZ(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET).z;\r\n\t}\r\n\r\n\tset _MainTex_STZ(z: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET));\r\n\t\ttilOff.z = z;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _MainTex_STW(): number {\r\n\t\treturn this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET).w;\r\n\t}\r\n\r\n\tset _MainTex_STW(w: number) {\r\n\t\tvar tilOff: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET));\r\n\t\ttilOff.w = w;\r\n\t\tthis.tilingOffset = tilOff;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget _Cutoff(): number {\r\n\t\treturn this.alphaTestValue;\r\n\t}\r\n\r\n\tset _Cutoff(value: number) {\r\n\t\tthis.alphaTestValue = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色R分量。\r\n\t */\r\n\tget albedoColorR(): number {\r\n\t\treturn this._ColorR;\r\n\t}\r\n\r\n\tset albedoColorR(value: number) {\r\n\t\tthis._ColorR = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色G分量。\r\n\t */\r\n\tget albedoColorG(): number {\r\n\t\treturn this._ColorG;\r\n\t}\r\n\r\n\tset albedoColorG(value: number) {\r\n\t\tthis._ColorG = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色B分量。\r\n\t */\r\n\tget albedoColorB(): number {\r\n\t\treturn this._ColorB;\r\n\t}\r\n\r\n\tset albedoColorB(value: number) {\r\n\t\tthis._ColorB = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色Z分量。\r\n\t */\r\n\tget albedoColorA(): number {\r\n\t\treturn this._ColorA;\r\n\t}\r\n\r\n\tset albedoColorA(value: number) {\r\n\t\tthis._ColorA = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率颜色。\r\n\t */\r\n\tget albedoColor(): Vector4 {\r\n\t\treturn this._albedoColor;\r\n\t}\r\n\r\n\tset albedoColor(value: Vector4) {\r\n\t\tvar finalAlbedo: Vector4 = (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.ALBEDOCOLOR));\r\n\t\tVector4.scale(value, this._albedoIntensity, finalAlbedo);\r\n\t\tthis._albedoColor = value;\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenSeparateMaterial.ALBEDOCOLOR, finalAlbedo);\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率强度。\r\n\t */\r\n\tget albedoIntensity(): number {\r\n\t\treturn this._albedoIntensity;\r\n\t}\r\n\r\n\tset albedoIntensity(value: number) {\r\n\t\tthis._AlbedoIntensity = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 反照率贴图。\r\n\t */\r\n\tget albedoTexture(): BaseTexture {\r\n\t\treturn this._shaderValues.getTexture(MeshTextBatchTweenSeparateMaterial.ALBEDOTEXTURE);\r\n\t}\r\n\r\n\tset albedoTexture(value: BaseTexture) {\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(MeshTextBatchTweenSeparateMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenSeparateMaterial.SHADERDEFINE_ALBEDOTEXTURE);\r\n\t\tthis._shaderValues.setTexture(MeshTextBatchTweenSeparateMaterial.ALBEDOTEXTURE, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移X分量。\r\n\t */\r\n\tget tilingOffsetX(): number {\r\n\t\treturn this._MainTex_STX;\r\n\t}\r\n\r\n\tset tilingOffsetX(x: number) {\r\n\t\tthis._MainTex_STX = x;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Y分量。\r\n\t */\r\n\tget tilingOffsetY(): number {\r\n\t\treturn this._MainTex_STY;\r\n\t}\r\n\r\n\tset tilingOffsetY(y: number) {\r\n\t\tthis._MainTex_STY = y;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移Z分量。\r\n\t */\r\n\tget tilingOffsetZ(): number {\r\n\t\treturn this._MainTex_STZ;\r\n\t}\r\n\r\n\tset tilingOffsetZ(z: number) {\r\n\t\tthis._MainTex_STZ = z;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移W分量。\r\n\t */\r\n\tget tilingOffsetW(): number {\r\n\t\treturn this._MainTex_STW;\r\n\t}\r\n\r\n\tset tilingOffsetW(w: number) {\r\n\t\tthis._MainTex_STW = w;\r\n\t}\r\n\r\n\t/**\r\n\t * 纹理平铺和偏移。\r\n\t */\r\n\tget tilingOffset(): Vector4 {\r\n\t\treturn (<Vector4>this._shaderValues.getVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET));\r\n\t}\r\n\r\n\tset tilingOffset(value: Vector4) {\r\n\t\tif (value) {\r\n\t\t\tif (value.x != 1 || value.y != 1 || value.z != 0 || value.w != 0)\r\n\t\t\t\tthis._shaderValues.addDefine(MeshTextBatchTweenSeparateMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t\telse\r\n\t\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenSeparateMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t} else {\r\n\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenSeparateMaterial.SHADERDEFINE_TILINGOFFSET);\r\n\t\t}\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenSeparateMaterial.TILINGOFFSET, value);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否支持顶点色。\r\n\t */\r\n\tget enableVertexColor(): boolean {\r\n\t\treturn this._enableVertexColor;\r\n\t}\r\n\r\n\tset enableVertexColor(value: boolean) {\r\n\t\tthis._enableVertexColor = value;\r\n\t\tif (value)\r\n\t\t\tthis._shaderValues.addDefine(MeshTextBatchTweenSeparateMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t\telse\r\n\t\t\tthis._shaderValues.removeDefine(MeshTextBatchTweenSeparateMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\r\n\t}\r\n\r\n\t/**\r\n\t * 渲染模式。\r\n\t */\r\n\tset renderMode(value: number) {\r\n\t\tswitch (value) {\r\n\t\t\tcase MeshTextBatchTweenSeparateMaterial.RENDERMODE_OPAQUE:\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MeshTextBatchTweenSeparateMaterial.RENDERMODE_CUTOUT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n\t\t\t\tthis.alphaTest = true;\r\n\t\t\t\tthis.depthWrite = true;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tcase MeshTextBatchTweenSeparateMaterial.RENDERMODE_TRANSPARENT:\r\n\t\t\t\tthis.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n\t\t\t\tthis.alphaTest = false;\r\n\t\t\t\tthis.depthWrite = false;\r\n\t\t\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\t\t\tthis.blend = RenderState.BLEND_ENABLE_ALL;\r\n\t\t\t\tthis.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n\t\t\t\tthis.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n\t\t\t\tthis.depthTest = RenderState.DEPTHTEST_LESS;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"MeshTextBatchTweenSeparateMaterial : renderMode value error.\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 是否写入深度。\r\n\t */\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._shaderValues.getBool(MeshTextBatchTweenSeparateMaterial.DEPTH_WRITE);\r\n\t}\r\n\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._shaderValues.setBool(MeshTextBatchTweenSeparateMaterial.DEPTH_WRITE, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 剔除方式。\r\n\t */\r\n\tget cull(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenSeparateMaterial.CULL);\r\n\t}\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenSeparateMaterial.CULL, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合方式。\r\n\t */\r\n\tget blend(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenSeparateMaterial.BLEND);\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenSeparateMaterial.BLEND, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 混合源。\r\n\t */\r\n\tget blendSrc(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenSeparateMaterial.BLEND_SRC);\r\n\t}\r\n\r\n\tset blendSrc(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenSeparateMaterial.BLEND_SRC, value);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 混合目标。\r\n\t */\r\n\tget blendDst(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenSeparateMaterial.BLEND_DST);\r\n\t}\r\n\r\n\tset blendDst(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenSeparateMaterial.BLEND_DST, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 深度测试方式。\r\n\t */\r\n\tget depthTest(): number {\r\n\t\treturn this._shaderValues.getInt(MeshTextBatchTweenSeparateMaterial.DEPTH_TEST);\r\n\t}\r\n\r\n\tset depthTest(value: number) {\r\n\t\tthis._shaderValues.setInt(MeshTextBatchTweenSeparateMaterial.DEPTH_TEST, value);\r\n\t}\r\n\r\n\t\r\n\tprivate _tweenPositionEnd: Vector4 = new Vector4(0.5, 2.0, 0.0, 0.0);\r\n\tget tweenPositionEnd(): Vector4 {\r\n\t\treturn this._tweenPositionEnd;\r\n\t}\r\n\r\n\tset tweenPositionEnd(value: Vector4) {\r\n\t\tthis._tweenPositionEnd = value;\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenSeparateMaterial.TWEEN_POSITION_END, value);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.setShaderName(MeshTextBatchTweenSeparateMaterial.shaderName);\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenSeparateMaterial.ALBEDOCOLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenSeparateMaterial.TWEEN_POSITION_BEGIN, new Vector4(0.0, 0.0, 0.0, 0.0));\r\n\t\tthis._shaderValues.setVector(MeshTextBatchTweenSeparateMaterial.TWEEN_POSITION_END, this._tweenPositionEnd);\r\n\t\tthis.renderMode = MeshTextBatchTweenSeparateMaterial.RENDERMODE_TRANSPARENT;\r\n\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t * @override\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: MeshTextBatchTweenSeparateMaterial = new MeshTextBatchTweenSeparateMaterial();\r\n\t\tthis.cloneTo(dest);\r\n\t\tdest._albedoIntensity = this._albedoIntensity;\r\n        this._albedoColor.cloneTo(dest._albedoColor);\r\n\t\treturn dest;\r\n\t}\r\n\r\n}","import { MeshTextBatchTweenMaterial } from \"./Material/MeshTextBatchTweenMaterial\";\r\nimport { MeshTextBatchTweenSeparateMaterial } from \"./Material/MeshTextBatchTweenSeparateMaterial\";\r\n\r\nexport interface MeshTextAtlasData\r\n{\r\n    meta: {size: {w: number, h: number}};\r\n    frames: {[key:string]:MeshTextAtlasFrameData};\r\n}\r\n\r\nexport interface MeshTextAtlasFrameData\r\n{\r\n    frameUV: {xMin:number, yMin:number, xMax: number, yMax:number, r: number};\r\n    frame: {x:number, y:number, w: number, h:number};\r\n    spriteSourceSize: {x:number, y:number, w: number, h:number};\r\n    sourceSize: {w: number, h:number};\r\n}\r\n\r\n\r\nexport default class MeshTextAtlas\r\n{\r\n    private static UID = 0;\r\n    uid:int = 0;\r\n    texture: Laya.Texture2D;\r\n    atlasData: MeshTextAtlasData;\r\n    private typeMap: Map<any, Map<string, MeshTextAtlasFrameData>> = new Map<any, Map<string, MeshTextAtlasFrameData>>();\r\n    typeScaleMap:Map<any, number> = new Map<any, number>();\r\n    \r\n    get textureWidth()\r\n    {\r\n        return this.atlasData.meta.size.w;\r\n    }\r\n\r\n    get textureHeight()\r\n    {\r\n        return this.atlasData.meta.size.h;\r\n    }\r\n\r\n    private _UnlitMaterial:Laya.UnlitMaterial;\r\n    get UnlitMaterial():Laya.UnlitMaterial\r\n    {\r\n        if(!this._UnlitMaterial)\r\n        {\r\n            var m = new Laya.UnlitMaterial();\r\n            m.renderMode = Laya.UnlitMaterial.RENDERMODE_TRANSPARENT;\r\n            m.albedoTexture = this.texture;\r\n            // m.cull = Laya.RenderState.CULL_NONE;\r\n            this._UnlitMaterial = m;\r\n        }\r\n        return this._UnlitMaterial;\r\n    }\r\n\r\n    \r\n    private _MeshTextBatchTweenMaterial:MeshTextBatchTweenMaterial;\r\n    get MeshTextBatchTweenMaterial():MeshTextBatchTweenMaterial\r\n    {\r\n        if(!this._MeshTextBatchTweenMaterial)\r\n        {\r\n            var m = new MeshTextBatchTweenMaterial();\r\n            m.renderMode = Laya.UnlitMaterial.RENDERMODE_TRANSPARENT;\r\n            m.albedoTexture = this.texture;\r\n            // m.cull = Laya.RenderState.CULL_NONE;\r\n            this._MeshTextBatchTweenMaterial = m;\r\n        }\r\n        return this._MeshTextBatchTweenMaterial;\r\n    }\r\n\r\n    private _MeshTextBatchTweenSeparateMaterial:MeshTextBatchTweenSeparateMaterial;\r\n    get MeshTextBatchTweenSeparateMaterial():MeshTextBatchTweenSeparateMaterial\r\n    {\r\n        if(!this._MeshTextBatchTweenMaterial)\r\n        {\r\n            var m = new MeshTextBatchTweenSeparateMaterial();\r\n            m.renderMode = Laya.UnlitMaterial.RENDERMODE_TRANSPARENT;\r\n            m.albedoTexture = this.texture;\r\n            // m.cull = Laya.RenderState.CULL_NONE;\r\n            this._MeshTextBatchTweenSeparateMaterial = m;\r\n        }\r\n        return this._MeshTextBatchTweenSeparateMaterial;\r\n    }\r\n    \r\n\r\n\tprivate static LoadAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.load(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n                resolve(data);\r\n\t\t\t}), null, type);\r\n\t\t});\r\n\t}\r\n    \r\n\tprivate static Load3DAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.create(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n                Laya.timer.frameOnce(1, this, ()=>\r\n                {\r\n                    resolve(data);\r\n                })\r\n\t\t\t}), null, type);\r\n\t\t});\r\n    }\r\n    \r\n    \r\n    static async CreateAsync(texturePath: string, atlasPath: string): Promise<MeshTextAtlas>\r\n    {\r\n        var texture = await this.LoadAsync(texturePath, Laya.Loader.TEXTURE2D);\r\n        var atlasData = await this.LoadAsync(atlasPath, Laya.Loader.JSON);\r\n        var atlas = new MeshTextAtlas(texture, atlasData);\r\n        return atlas;\r\n    }\r\n\r\n    constructor(texture: Laya.Texture2D, atlasData: MeshTextAtlasData)\r\n    {\r\n        this.uid = MeshTextAtlas.UID ++;\r\n        this.texture = texture;\r\n        this.atlasData = atlasData;\r\n\r\n        this.InitUV();\r\n    }\r\n\r\n    InitUV()\r\n    {\r\n        var atlasData = this.atlasData;\r\n        var textureWidth =  atlasData.meta.size.w;\r\n        var textureHeight =  atlasData.meta.size.h;\r\n        for(var frameKey in atlasData.frames)\r\n        {\r\n            var frame = atlasData.frames[frameKey];\r\n            frame.frameUV = \r\n            {\r\n                xMin: frame.frame.x / textureWidth,\r\n                yMin: frame.frame.y / textureHeight,\r\n                xMax: (frame.frame.x + frame.frame.w) / textureWidth,\r\n                yMax: (frame.frame.y + frame.frame.h) / textureHeight,\r\n                r:frame.frame.w / frame.frame.h\r\n            };\r\n\r\n        }\r\n    }\r\n\r\n    GetType(typeKey: any):Map<string, MeshTextAtlasFrameData>\r\n    {\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n\r\n    GetOrCreateType(typeKey: any):Map<string, MeshTextAtlasFrameData>\r\n    {\r\n        if(!this.typeMap.has(typeKey))\r\n        {\r\n            this.typeMap.set(typeKey, new Map<string, MeshTextAtlasFrameData>());\r\n        }\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n\r\n    GenerateNumType(numTypeName: string, typeKey?: any)\r\n    {\r\n        if(typeKey === undefined)\r\n        {\r\n            typeKey = numTypeName;\r\n        }\r\n\r\n        var map = this.GetOrCreateType(typeKey);\r\n        for(var i = 0; i <= 9; i ++)\r\n        {\r\n            var frameName = numTypeName + i;\r\n            var frame = this.atlasData.frames[frameName];\r\n            if(frame)\r\n            {\r\n                map.set(i.toString(), frame);\r\n            } \r\n            else\r\n            {\r\n                console.warn(\"文字图集里没找到字符:\" + i + \", type=\" + typeKey + \", frameName=\"+ frameName);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        var flags = [\"-\", \"+\"];\r\n        for(var flag of flags)\r\n        {\r\n            var frameName = numTypeName + flag;\r\n            var frame = this.atlasData.frames[frameName];\r\n            if(frame)\r\n            {\r\n                map.set(i.toString(), frame);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    AddToType(chart: string, frameName: string, typeKey: any)\r\n    {\r\n        if(frameName === undefined)\r\n        {\r\n            frameName = chart;\r\n        }\r\n\r\n        var map = this.GetOrCreateType(typeKey);\r\n        var frame = this.atlasData.frames[frameName];\r\n        if(frame)\r\n        {\r\n            map.set(chart, frame);\r\n        }\r\n    }\r\n\r\n    \r\n    AddToAllType(chart: string, frameName?: string)\r\n    {\r\n        if(frameName === undefined)\r\n        {\r\n            frameName = chart;\r\n        }\r\n\r\n        var frame = this.atlasData.frames[frameName];\r\n        if(frame)\r\n        {\r\n            this.typeMap.forEach((map, key)=>\r\n            {\r\n                map.set(chart, frame);\r\n            })\r\n        }\r\n    }\r\n\r\n    GetTypeFrame(chart: string, typeKey:any):MeshTextAtlasFrameData\r\n    {\r\n        var map = this.GetType(typeKey);\r\n        return map.get(chart);\r\n    }\r\n\r\n    GetFrame(chart: string, typeKey?:any):MeshTextAtlasFrameData\r\n    {\r\n        var frame: MeshTextAtlasFrameData;\r\n        if(typeKey !== undefined)\r\n        {\r\n            frame = this.GetTypeFrame(chart, typeKey);\r\n            if(frame)\r\n            {\r\n                return frame;\r\n            }\r\n        }\r\n\r\n        frame = this.atlasData.frames[chart];\r\n        return frame;\r\n\r\n    }\r\n\r\n\r\n}","import MeshTextBatchMesh from \"./MeshTextBatchMesh\";\r\nimport MeshTextBatchSprite from \"./MeshTextBatchSprite\";\r\nimport ToolMeshText from \"./ToolMeshText\";\r\nimport MeshTextAtlas from \"./MeshTextAtlas\";\r\nimport { MeshTextType, TextStyleType } from \"./MeshTextType\";\r\nimport { HorizontalAlignType } from \"./HorizontalAlignType\";\r\nimport { MeshTextBatchTweenMaterial } from \"./Material/MeshTextBatchTweenMaterial\";\r\nimport { MeshTextBatchTweenSeparateMaterial } from \"./Material/MeshTextBatchTweenSeparateMaterial\";\r\n\r\nexport default class MeshTextLib\r\n{\r\n    static defaultAtlas: MeshTextAtlas;\r\n    static defaultText: MeshTextBatchMesh;\r\n    static defaultMeshTextBatchSprite: MeshTextBatchSprite;\r\n\r\n    static isInited: boolean = false;\r\n    static async InitAsync()\r\n    {\r\n        if(this.isInited)\r\n        {\r\n            return\r\n        }\r\n\r\n        this.isInited = true;\r\n        await MeshTextBatchTweenMaterial.install();\r\n        await MeshTextBatchTweenSeparateMaterial.install();\r\n    }\r\n\r\n    static async LoadDefalutAsync()\r\n    {\r\n        await this.InitAsync();\r\n        if(this.defaultAtlas)\r\n        {\r\n            return;\r\n        }\r\n        var texturePath: string, atlasPath: string;\r\n        texturePath = \"res/font/WarMeshText.png\";\r\n        atlasPath = \"res/font/WarMeshText.txt\";\r\n        var atlas = await MeshTextAtlas.CreateAsync(texturePath, atlasPath);\r\n        atlas.GenerateNumType(MeshTextType.White, TextStyleType.White);\r\n        atlas.GenerateNumType(MeshTextType.Red, TextStyleType.Red);\r\n        atlas.GenerateNumType(MeshTextType.Green, TextStyleType.Green);\r\n        atlas.GenerateNumType(MeshTextType.WhiteBig, TextStyleType.WhiteBig);\r\n        atlas.GenerateNumType(MeshTextType.YellowBig, TextStyleType.YellowBig);\r\n\r\n        atlas.AddToAllType(\"c\", \"c_yellow\");\r\n        atlas.AddToType(\"c\", \"c_red\", TextStyleType.Red);\r\n        atlas.AddToAllType(\"d\");\r\n        atlas.GenerateNumType(MeshTextType.Red, TextStyleType.Red);\r\n\r\n        atlas.typeScaleMap.set(TextStyleType.White, 0.2);\r\n        atlas.typeScaleMap.set(TextStyleType.Green, 0.2);\r\n        atlas.typeScaleMap.set(TextStyleType.Green, 0.2);\r\n\r\n        atlas.typeScaleMap.set(TextStyleType.WhiteBig, 0.3);\r\n        atlas.typeScaleMap.set(TextStyleType.YellowBig, 0.3);\r\n\r\n        var batchMesh:MeshTextBatchMesh = new MeshTextBatchMesh(atlas);\r\n        // batchMesh.StartUpdate();\r\n\r\n        \r\n        var meshTextBatchSprite = batchMesh.sprite = new MeshTextBatchSprite(batchMesh);\r\n        meshTextBatchSprite.meshRenderer.sharedMaterial = atlas.MeshTextBatchTweenMaterial;\r\n        meshTextBatchSprite.meshRenderer.sharedMaterial.renderQueue = Laya.BaseMaterial.RENDERQUEUE_TRANSPARENT + 500;\r\n        // meshTextBatchSprite.transform.localRotationEulerY = 20;\r\n        // meshTextBatchSprite.transform.localPositionZ = 0;\r\n        this.defaultAtlas = atlas;\r\n        this.defaultText = batchMesh;\r\n        this.defaultMeshTextBatchSprite = meshTextBatchSprite;\r\n    }\r\n}\r\n\r\nwindow['MeshTextBatchMesh'] = MeshTextBatchMesh;\r\nwindow['MeshTextBatchSprite'] = MeshTextBatchSprite;\r\nwindow['ToolMeshText'] = ToolMeshText;\r\nwindow['MeshTextAtlas'] = MeshTextAtlas;\r\nwindow['MeshTextType'] = MeshTextType;\r\nwindow['HorizontalAlignType'] = HorizontalAlignType;\r\nwindow['MeshTextBatchTweenMaterial'] = MeshTextBatchTweenMaterial;\r\nwindow['MeshTextBatchTweenSeparateMaterial'] = MeshTextBatchTweenSeparateMaterial;\r\nwindow['MeshTextLib'] = MeshTextLib;","export class TextStyleMap\r\n{\r\n    private typeMap: Map<any, Map<string, string>> = new Map<any, Map<string, string>>();\r\n    defaultType:any;\r\n    GetType(typeKey: any):Map<string, string>\r\n    {\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n\r\n    GetOrCreateType(typeKey: any):Map<string, string>\r\n    {\r\n        if(!this.typeMap.has(typeKey))\r\n        {\r\n            this.typeMap.set(typeKey, new Map<string, string>());\r\n        }\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n    \r\n    GenerateNumType(charts:string,  typeKey: any)\r\n    {\r\n        var map = this.GetOrCreateType(typeKey);\r\n        for(var i = 0; i <= 9; i ++)\r\n        {\r\n            map.set(i.toString(), charts[i]);\r\n        }\r\n    }\r\n\r\n    AddToAllType(chart: string, fontChart?: string)\r\n    {\r\n        if(fontChart === undefined)\r\n        {\r\n            fontChart = chart;\r\n        }\r\n        \r\n        this.typeMap.forEach((map, key)=>\r\n        {\r\n            map.set(chart, fontChart);\r\n        });\r\n    }\r\n\r\n    \r\n    AddToType(chart: string, fontChart: string, typeKey: any)\r\n    {\r\n        var map = this.GetOrCreateType(typeKey);\r\n        map.set(chart, fontChart);\r\n    }\r\n    \r\n    chartsCache:Map<any, Map<string, string>> = new Map<any, Map<string, string>>();\r\n    \r\n    GetOrCreateCache(typeKey: any):Map<string, string>\r\n    {\r\n        if(!this.chartsCache.has(typeKey))\r\n        {\r\n            this.chartsCache.set(typeKey, new Map<string, string>());\r\n        }\r\n        return this.chartsCache.get(typeKey);\r\n    }\r\n    GetCharts(txt: string, typeKey:any):string\r\n    {\r\n        var cahceMap = this.GetOrCreateCache(typeKey);\r\n        if(cahceMap.has(txt))\r\n        {\r\n            return cahceMap.get(txt);\r\n        }\r\n        if(typeKey == this.defaultType)\r\n        {\r\n            return txt;\r\n        }\r\n\r\n        var map = this.GetType(typeKey);\r\n        var str = \"\";\r\n        for(var i = 0, len = txt.length; i < len; i ++)\r\n        {\r\n            if(map.has(txt[i]))\r\n            {\r\n                var chart = map.get(txt[i]);\r\n                str += chart;\r\n            }\r\n            else\r\n            {\r\n                str += txt[i];\r\n            }\r\n        }\r\n        \r\n        cahceMap.set(txt, str);\r\n        \r\n        return str;\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n}","import WarBitmapText from \"./WarBitmapText\";\r\nimport Vector2 = Laya.Vector2;\r\nimport Vector3 = Laya.Vector3;\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nexport default class WarBitmapTextItem\r\n{\r\n    bitmapText: WarBitmapText;\r\n    textTF:Laya.Text;\r\n    public index:number = 0;\r\n    public atlaTypeKey: any;\r\n    public scale: number = 1;\r\n    private _text: string = \"\";\r\n    private _text2: string = \"\";\r\n    constructor(bitmapText: WarBitmapText, index?:number)\r\n    {\r\n        this.bitmapText = bitmapText;\r\n        this.index = index;\r\n\r\n        var tf = new Laya.Text();\r\n        tf.font = bitmapText.fontName;\r\n        tf.align = \"center\";\r\n        tf.width = 250;\r\n        tf.height = 50;\r\n        tf.pivotX = 0.5 * tf.width;\r\n        tf.pivotY = 0.5 * tf.height;\r\n        this.textTF = tf;\r\n    }\r\n\r\n    public get Text():string\r\n    {\r\n        return this._text;\r\n    }\r\n\r\n    public set Text(value: string)\r\n    {\r\n        \r\n        if(this._text == value)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(value === undefined || value === null)\r\n        {\r\n            value = \"\";\r\n        }\r\n        var str = value;\r\n        if(this.bitmapText.textStyleMap)\r\n        {\r\n            str = this.bitmapText.textStyleMap.GetCharts(value, this.atlaTypeKey);\r\n        }\r\n        if(this._text2 == str)\r\n        {\r\n            return;\r\n        }\r\n        this._text = value;\r\n        this._text2 = str;\r\n\r\n        this.textTF.text = str;\r\n        window['tf'] = this.textTF;\r\n\r\n    }\r\n\r\n    public position: Vector3 = new Vector3();\r\n\r\n    \r\n    private startX:number = 0;\r\n\r\n    private startY:number = 0;\r\n    public tweenRate = 0;\r\n    public StartTween()\r\n    {\r\n        var textTF = this.textTF;\r\n        this.tweenRate = 0;\r\n        this.tweenValue = 0;\r\n        // this.bitmapText.AddTweenItem(this);\r\n        \r\n        let ratio = Number(Math.random().toFixed(2));\r\n        this.startX = textTF.x = (textTF.x - 40 + 80 * ratio);\r\n        this.startY = textTF.y = (textTF.y - 80 * ratio);\r\n\r\n        textTF.scale(0,0);\r\n        textTF.alpha = 1.0;\r\n\r\n        Tween.to(textTF, { scaleX: 1.5, scaleY: 1.5 }, 144, Ease.linearNone, null, 0, false);\r\n        Tween.to(textTF, { scaleX: 0.8, scaleY: 0.8 }, 144, Ease.linearNone, null, 144, false);\r\n        Tween.to(textTF, { y: this.startY - 80,alpha: 0.0 }, 400, Ease.linearNone, Laya.Handler.create(this, this.OnTweenEnd), 448, false);\r\n    \r\n    }\r\n\r\n    public tweenSpeed: number = 1;\r\n    private speedRandom = Math.random() * 0.5 + 0.7;\r\n    private tweenValue = 0;\r\n    public UpdateTween(delta: number)\r\n    {\r\n        this.tweenRate += delta   * this.tweenSpeed;\r\n        // this.tweenValue = Mathf.Lerp(this.tweenValue, 1.0, this.tweenRate);\r\n        // this.tweenValue = Mathf.Lerp(0, 1.0, this.tweenRate);\r\n        this.tweenValue = Mathf.Lerp(this.tweenValue * 0.25, 1.0, this.tweenRate);\r\n\r\n\r\n        if(this.tweenValue >= 1)\r\n        {\r\n            this.RecoverPool();\r\n        }\r\n    }\r\n\r\n    Clear()\r\n    {\r\n        Tween.clearAll(this.textTF);\r\n    }\r\n\r\n    OnTweenEnd()\r\n    {\r\n        Tween.clearAll(this.textTF);\r\n        if(this.bitmapText.debugItemLoop)\r\n        {\r\n            this.textTF.pos(this.position.x, this.position.y);\r\n            this.StartTween();\r\n            return;\r\n        }\r\n        this.RecoverPool();\r\n    }\r\n\r\n    public RecoverPool()\r\n    {\r\n        this.textTF.removeSelf();\r\n        Tween.clearAll(this.textTF);\r\n        this.bitmapText.RemoveTweenItem(this);\r\n        this.bitmapText.RecoverItem(this);\r\n    }\r\n\r\n}","import Text = Laya.Text;\r\nimport BitmapFont = Laya.BitmapFont;\r\nimport Handler = Laya.Handler;\r\nimport { TextStyleMap } from \"./TextStyleMap\";\r\nimport { TextStyleType } from \"./TextStyleType\";\r\nimport WarBitmapTextItem from \"./WarBitmapTextItem\";\r\nexport default class WarBitmapText extends Laya.Sprite\r\n{\r\n   \r\n    debugItemLoop: boolean = false;\r\n\r\n    private static UID = 0;\r\n    uid: number = 0;\r\n    private itemPoolKey: string;\r\n\r\n    fontName: string = \"WarFont\";\r\n    bitmapFont: BitmapFont;\r\n    textStyleMap: TextStyleMap;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        \r\n        this.uid = WarBitmapText.UID ++;\r\n        this.itemPoolKey = \"WarBitmapTextItem__\" + this.uid;\r\n    }\r\n\r\n    LoadFont(path: string, callback?:Function)\r\n    {\r\n        var bitmapFont: BitmapFont = new BitmapFont();\r\n        this.bitmapFont = bitmapFont;\r\n        bitmapFont.loadFont(path, new Handler(this, ()=>\r\n        {\r\n            bitmapFont.setSpaceWidth(10);\r\n            Text.registerBitmapFont(this.fontName, bitmapFont);\r\n            if(callback)\r\n            {\r\n                callback();\r\n            }\r\n        }));\r\n    }\r\n\r\n    InitItemPool(maxTextNum: number = 100)\r\n    {\r\n        for(var i = maxTextNum - 1; i >= 0; i --)\r\n        {\r\n            var item = new WarBitmapTextItem(this, i);\r\n            Laya.Pool.recover(this.itemPoolKey, item);\r\n        }\r\n    }\r\n    \r\n    textItemCache: Map<any, Map<string, WarBitmapTextItem[]>> = new Map<any, Map<string, WarBitmapTextItem[]>>();\r\n\r\n    GetItemCacheByType(text: string, atlaTypeKey: any):WarBitmapTextItem[]\r\n    {\r\n        var typeMap: Map<string, WarBitmapTextItem[]>;\r\n        if(this.textItemCache.has(atlaTypeKey))\r\n        {\r\n            typeMap = this.textItemCache.get(atlaTypeKey);\r\n        }\r\n        else\r\n        {\r\n            typeMap = new Map<string, WarBitmapTextItem[]>();\r\n            this.textItemCache.set(atlaTypeKey, typeMap);\r\n        }\r\n\r\n        if(typeMap.has(text))\r\n        {\r\n            return typeMap.get(text);\r\n        }\r\n        else\r\n        {\r\n            var list = [];\r\n            typeMap.set(text, list);\r\n            return list;\r\n        }\r\n    }\r\n\r\n    RecoverItemCache(item:WarBitmapTextItem)\r\n    {\r\n        var list = this.GetItemCacheByType(item.Text, item.atlaTypeKey);\r\n        list.push(item);\r\n    }\r\n\r\n    \r\n    RemoveFromItemCache(item:WarBitmapTextItem)\r\n    {\r\n        if(!item.atlaTypeKey)\r\n        {\r\n            return;\r\n        }\r\n        var list = this.GetItemCacheByType(item.Text, item.atlaTypeKey);\r\n        var i = list.indexOf(item);\r\n        if(i != -1)\r\n        {\r\n            list.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    GetItemCache(text: string, atlaTypeKey: any):WarBitmapTextItem\r\n    {\r\n        var list = this.GetItemCacheByType(text, atlaTypeKey);\r\n        if(list.length > 0)\r\n        {\r\n            var item = list.shift();\r\n            var pool = Laya.Pool.getPoolBySign(this.itemPoolKey);\r\n            var i = pool.indexOf(item);\r\n            if(i != -1)\r\n            {\r\n                pool.splice(i, 1);\r\n            }\r\n            return item;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    useItemList:WarBitmapTextItem[] = [];\r\n    GetItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0):WarBitmapTextItem\r\n    {\r\n        var item:WarBitmapTextItem = this.GetItemCache(text, atlaTypeKey);\r\n        if(item == null)\r\n        {\r\n            item = Laya.Pool.getItem(this.itemPoolKey);\r\n            if(item)\r\n            {\r\n                this.RemoveFromItemCache(item);\r\n            }\r\n        }\r\n\r\n\r\n        if(item == null)\r\n        {\r\n            if(this.useItemList.length > 0)\r\n            {\r\n                item = this.useItemList.shift();\r\n                item.Clear();\r\n                this.RemoveFromItemCache(item);\r\n                // item.RecoverPool();\r\n            }\r\n        }\r\n\r\n        if(this.camera)\r\n        {\r\n            this.camera.worldToViewportPoint(position, item.position);\r\n            position = item.position;\r\n        }\r\n        item.atlaTypeKey = atlaTypeKey;\r\n        item.position = position;\r\n        item.textTF.pos(position.x, position.y);\r\n        item.scale = scale;\r\n        item.Text = text;\r\n        this.useItemList.push(item);\r\n        return item;\r\n    } \r\n\r\n    PlayItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0, tweenSpeed:number = 1.0):WarBitmapTextItem\r\n    {\r\n        var item:WarBitmapTextItem = this.GetItem(text, position, atlaTypeKey, scale);\r\n        item.tweenSpeed = tweenSpeed;\r\n        this.addChild(item.textTF);\r\n        item.StartTween();\r\n        return item;\r\n    }\r\n\r\n    private RemoveUseFromList(item:WarBitmapTextItem)\r\n    {\r\n        var index = this.useItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.useItemList.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    RecoverItem(item:WarBitmapTextItem)\r\n    {\r\n        this.RecoverItemCache(item);\r\n        Laya.Pool.recover(this.itemPoolKey, item);\r\n        this.RemoveUseFromList(item);\r\n    }\r\n\r\n    tweenItemList: WarBitmapTextItem[] = [];\r\n\r\n    AddTweenItem(item:WarBitmapTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index == -1)\r\n        {\r\n            this.tweenItemList.push(item);\r\n        }\r\n    }\r\n\r\n    RemoveTweenItem(item:WarBitmapTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.tweenItemList.splice(index, 1);\r\n        }\r\n    }\r\n    StartUpdate()\r\n    {\r\n        Laya.timer.frameLoop(1, this, this.OnLoop);\r\n    }\r\n\r\n    StopUpdate()\r\n    {\r\n        Laya.timer.clear(this, this.OnLoop);\r\n    }\r\n\r\n    OnLoop()\r\n    {\r\n        var delta = Laya.timer.delta * 0.001;\r\n        for(var i = this.tweenItemList.length - 1; i >= 0; i --)\r\n        {\r\n            var item = this.tweenItemList[i];\r\n            item.UpdateTween(delta);\r\n        }\r\n    }\r\n\r\n    camera: Laya.Camera;\r\n    \r\n    __parent: Laya.Node;\r\n    __parentIndex:number;\r\n    SetParent(parent: Laya.Node, parentIndex?:number)\r\n    {\r\n        this.__parent = parent;\r\n        this.__parentIndex = parentIndex;\r\n    }\r\n\r\n\r\n    Show()\r\n    {\r\n        if(this.__parentIndex != undefined)\r\n        {\r\n            this.__parent.addChildAt(this, this.__parentIndex);\r\n        }\r\n        else\r\n        {\r\n            this.__parent.addChild(this);\r\n        }\r\n        this.StartUpdate();\r\n    }\r\n\r\n    Hide()\r\n    {\r\n        this.Clear();\r\n        this.removeSelf();\r\n        this.StopUpdate();\r\n    }\r\n\r\n    Clear()\r\n    {\r\n        while(this.useItemList.length > 0)\r\n        {\r\n            var item = this.useItemList.shift();\r\n            item.RecoverPool();\r\n        }\r\n        this.tweenItemList.length = 0;\r\n    }\r\n\r\n\r\n}","export enum TextStyleType\r\n{\r\n    White = 0,\r\n    Red ,\r\n    Green ,\r\n    WhiteBig ,\r\n    YelloBig ,\r\n}","import { TextStyleMap } from \"./TextStyleMap\";\r\nimport WarBitmapText from \"./WarBitmapText\";\r\nimport { TextStyleType } from \"./TextStyleType\";\r\n\r\n\r\nexport default class WarBitmapTextLib\r\n{\r\n    static defaultAtlas: TextStyleMap;\r\n    static defaultText: WarBitmapText;\r\n\r\n    static async LoadDefalutAsync()\r\n    {\r\n        if(this.defaultAtlas)\r\n        {\r\n            return;\r\n        }\r\n        \r\n\r\n        var text = this.defaultText = new WarBitmapText();\r\n        var style = this.defaultAtlas = new TextStyleMap();\r\n        this.defaultText.textStyleMap = style;\r\n        style.GenerateNumType(\"012345679\", TextStyleType.White);\r\n        style.GenerateNumType(\"qwertyuiop\", TextStyleType.Red);\r\n        style.GenerateNumType(\"asdfghjkl;\", TextStyleType.Green);\r\n        style.GenerateNumType(\"zxcvbnm,./\", TextStyleType.YelloBig);\r\n        style.GenerateNumType(\"零一二三四五六七八九\", TextStyleType.WhiteBig);\r\n        style.AddToAllType(\"d\", \"闪\");\r\n        style.AddToAllType(\"c\", \"暴\");\r\n        style.AddToType(\"c\", \"爆\", TextStyleType.Red);\r\n\r\n        return new Promise<WarBitmapText>((resolve)=>\r\n        {\r\n            text.LoadFont(\"res/font/WarFont-export.fnt\", ()=>\r\n            {\r\n                text.InitItemPool();\r\n                resolve(text);\r\n            });\r\n         });\r\n    }\r\n}\r\n\r\nwindow['WarBitmapTextLib'] = WarBitmapTextLib;","\r\nexport interface TextureTextAtlasData\r\n{\r\n    meta: {size: {w: number, h: number}};\r\n    frames: {[key:string]:TextureTextAtlasFrameData};\r\n}\r\n\r\nexport interface TextureTextAtlasFrameData\r\n{\r\n    frameUV: {xMin:number, yMin:number, xMax: number, yMax:number, r: number};\r\n    frame: {x:number, y:number, w: number, h:number};\r\n    spriteSourceSize: {x:number, y:number, w: number, h:number};\r\n    sourceSize: {w: number, h:number};\r\n    texture: Laya.Texture;\r\n    poolSign:string;\r\n\r\n}\r\n\r\n\r\nexport default class TextureTextAtlas\r\n{\r\n    private static UID = 0;\r\n    uid:int = 0;\r\n    texture: Laya.Texture;\r\n    atlasData: TextureTextAtlasData;\r\n    private typeMap: Map<any, Map<string, TextureTextAtlasFrameData>> = new Map<any, Map<string, TextureTextAtlasFrameData>>();\r\n    typeScaleMap:Map<any, number> = new Map<any, number>();\r\n    get textureWidth()\r\n    {\r\n        return this.atlasData.meta.size.w;\r\n    }\r\n\r\n    get textureHeight()\r\n    {\r\n        return this.atlasData.meta.size.h;\r\n    }\r\n\r\n    \r\n\r\n\tprivate static LoadAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.load(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n                resolve(data);\r\n\t\t\t}), null, type);\r\n\t\t});\r\n\t}\r\n    \r\n\tprivate static Load3DAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.create(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n                Laya.timer.frameOnce(1, this, ()=>\r\n                {\r\n                    resolve(data);\r\n                })\r\n\t\t\t}), null, type);\r\n\t\t});\r\n    }\r\n\r\n    private static LoadTexture(texturePath: string): Promise<Laya.Texture>\r\n    {\r\n\t\treturn new  Promise<Laya.Texture>((resolve)=>\r\n\t\t{\r\n            var texture = new Laya.Texture();\r\n            texture.load(texturePath, Laya.Handler.create(this, ()=>{\r\n                resolve(texture);\r\n            }))\r\n        });\r\n    }\r\n    \r\n    \r\n    static async CreateAsync(texturePath: string, atlasPath: string): Promise<TextureTextAtlas>\r\n    {\r\n        var texture = await this.LoadTexture(texturePath);\r\n        var atlasData = await this.LoadAsync(atlasPath, Laya.Loader.JSON);\r\n        var atlas = new TextureTextAtlas(texture, atlasData);\r\n        return atlas;\r\n    }\r\n\r\n    constructor(texture: Laya.Texture, atlasData: TextureTextAtlasData)\r\n    {\r\n        this.uid = TextureTextAtlas.UID ++;\r\n        this.texture = texture;\r\n        this.atlasData = atlasData;\r\n\r\n        this.InitUV();\r\n    }\r\n\r\n    InitUV()\r\n    {\r\n        var atlasData = this.atlasData;\r\n        var textureWidth =  atlasData.meta.size.w;\r\n        var textureHeight =  atlasData.meta.size.h;\r\n        for(var frameKey in atlasData.frames)\r\n        {\r\n            var frame = atlasData.frames[frameKey];\r\n            frame.frameUV = \r\n            {\r\n                xMin: frame.frame.x / textureWidth,\r\n                yMin: frame.frame.y / textureHeight,\r\n                xMax: (frame.frame.x + frame.frame.w) / textureWidth,\r\n                yMax: (frame.frame.y + frame.frame.h) / textureHeight,\r\n                r:frame.frame.w / frame.frame.h\r\n            };\r\n            var f = frame.frame;\r\n            frame.texture = Laya.Texture.createFromTexture(this.texture,\r\n                f.x, f.y, f.w, f.h);\r\n            frame.poolSign = \"TextureTextAtlas_\" + this.uid + \"_\" + frameKey;\r\n\r\n        }\r\n    }\r\n\r\n    GetType(typeKey: any):Map<string, TextureTextAtlasFrameData>\r\n    {\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n\r\n    GetOrCreateType(typeKey: any):Map<string, TextureTextAtlasFrameData>\r\n    {\r\n        if(!this.typeMap.has(typeKey))\r\n        {\r\n            this.typeMap.set(typeKey, new Map<string, TextureTextAtlasFrameData>());\r\n        }\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n\r\n    GenerateNumType(numTypeName: string, typeKey?: any)\r\n    {\r\n        if(typeKey === undefined)\r\n        {\r\n            typeKey = numTypeName;\r\n        }\r\n\r\n        var map = this.GetOrCreateType(typeKey);\r\n        for(var i = 0; i <= 9; i ++)\r\n        {\r\n            var frameName = numTypeName + i;\r\n            var frame = this.atlasData.frames[frameName];\r\n            if(frame)\r\n            {\r\n                map.set(i.toString(), frame);\r\n            } \r\n            else\r\n            {\r\n                console.warn(\"文字图集里没找到字符:\" + i);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        var flags = [\"-\", \"+\"];\r\n        for(var flag of flags)\r\n        {\r\n            var frameName = numTypeName + flag;\r\n            var frame = this.atlasData.frames[frameName];\r\n            if(frame)\r\n            {\r\n                map.set(i.toString(), frame);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    AddToType(chart: string, frameName: string, typeKey: any)\r\n    {\r\n        if(frameName === undefined)\r\n        {\r\n            frameName = chart;\r\n        }\r\n\r\n        var map = this.GetOrCreateType(typeKey);\r\n        var frame = this.atlasData.frames[frameName];\r\n        if(frame)\r\n        {\r\n            map.set(chart, frame);\r\n        }\r\n    }\r\n\r\n    \r\n    AddToAllType(chart: string, frameName?: string)\r\n    {\r\n        if(frameName === undefined)\r\n        {\r\n            frameName = chart;\r\n        }\r\n\r\n        var frame = this.atlasData.frames[frameName];\r\n        if(frame)\r\n        {\r\n            this.typeMap.forEach((map, key)=>\r\n            {\r\n                map.set(chart, frame);\r\n            })\r\n        }\r\n    }\r\n\r\n    GetTypeFrame(chart: string, typeKey:any):TextureTextAtlasFrameData\r\n    {\r\n        var map = this.GetType(typeKey);\r\n        return map.get(chart);\r\n    }\r\n\r\n    GetFrame(chart: string, typeKey?:any):TextureTextAtlasFrameData\r\n    {\r\n        var frame: TextureTextAtlasFrameData;\r\n        if(typeKey !== undefined)\r\n        {\r\n            frame = this.GetTypeFrame(chart, typeKey);\r\n            if(frame)\r\n            {\r\n                return frame;\r\n            }\r\n        }\r\n\r\n        frame = this.atlasData.frames[chart];\r\n        return frame;\r\n    }\r\n\r\n    InitAllChartSpritePool(maxNum: number = 100)\r\n    {\r\n        var atlasData = this.atlasData;\r\n\r\n        for(var frameKey in atlasData.frames)\r\n        {\r\n            var frame = atlasData.frames[frameKey];\r\n            for(var i = 0; i < maxNum; i ++)\r\n            {\r\n                var sprite = this.CreateChartSprite(frame);\r\n                Laya.Pool.recover(frame.poolSign, sprite);\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    CreateChartSprite(frame: TextureTextAtlasFrameData):Laya.Sprite\r\n    {\r\n        var sprite = new Laya.Sprite();\r\n        sprite.texture = frame.texture;\r\n        sprite.width = frame.frame.w;\r\n        sprite.height = frame.frame.h;\r\n        sprite.name = frame.poolSign;\r\n        return sprite;\r\n    }\r\n\r\n    GetChartSprite(chart: string, typeKey?:any): Laya.Sprite\r\n    {\r\n        var frame = this.GetFrame(chart, typeKey);\r\n        var sprite = Laya.Pool.getItem(frame.poolSign);\r\n        if(!sprite)\r\n        {\r\n            sprite = this.CreateChartSprite(frame);\r\n        }\r\n        return sprite;\r\n    }\r\n\r\n    RecoverChartSprite(sprite: Laya.Sprite)\r\n    {\r\n        Laya.Pool.recover(sprite.name, sprite);\r\n    }\r\n\r\n\r\n}","\r\nimport Vector2 = Laya.Vector2;\r\nimport Vector3 = Laya.Vector3;\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nimport WarTextureText from \"./WarTextureText\";\r\nexport default class WarTextureTextItem extends Laya.Sprite\r\n{\r\n    bitmapText: WarTextureText;\r\n    public index:number = 0;\r\n    public atlaTypeKey: any;\r\n    private _text: string = \"\";\r\n    private spriteList: Laya.Sprite[] = [];\r\n    public __scale = 1;\r\n    constructor(bitmapText: WarTextureText, index?:number)\r\n    {\r\n        super();\r\n        this.bitmapText = bitmapText;\r\n        this.index = index;\r\n    }\r\n\r\n    \r\n    public get Text():string\r\n    {\r\n        return this._text;\r\n    }\r\n\r\n    public set Text(value: string)\r\n    {\r\n        if(this._text == value)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(value === undefined || value === null)\r\n        {\r\n            value = \"\";\r\n        }\r\n\r\n\r\n        for(var sprite of this.spriteList)\r\n        {\r\n            sprite.removeSelf();\r\n            this.bitmapText.textStyleMap.RecoverChartSprite(sprite);\r\n        }\r\n        this.spriteList.length = 0;\r\n\r\n        var x = -value.length * 25;\r\n        for(var i = 0, len = value.length; i < len; i ++)\r\n        {\r\n            var sprite = this.bitmapText.textStyleMap.GetChartSprite(value[i], this.atlaTypeKey);\r\n            // sprite.scale(this.__scale, this.__scale);\r\n            sprite.x = x;\r\n            x += sprite.width;\r\n            // x += sprite.width * this.__scale;\r\n            this.addChild(sprite);\r\n            this.spriteList.push(sprite);\r\n        }\r\n        // this.width = x;\r\n        this.pivotX = 0.5;\r\n        this.pivotY = 0.5;\r\n    }\r\n\r\n    public position: Vector3 = new Vector3();\r\n\r\n    \r\n    private startX:number = 0;\r\n\r\n    private startY:number = 0;\r\n    public tweenRate = 0;\r\n    public StartTween()\r\n    {\r\n        this.tweenRate = 0;\r\n        this.tweenValue = 0;\r\n        // this.bitmapText.AddTweenItem(this);\r\n        \r\n        let ratio = Number(Math.random().toFixed(2));\r\n        this.startX = this.x = (this.x - 40 + 80 * ratio);\r\n        this.startY = this.y = (this.y - 80 * ratio);\r\n\r\n        this.scale(0,0);\r\n        this.alpha = 1.0;\r\n\r\n        Tween.to(this, { scaleX: 1.5, scaleY: 1.5 }, 144, Ease.linearNone, null, 0, false);\r\n        Tween.to(this, { scaleX: 0.8, scaleY: 0.8 }, 144, Ease.linearNone, null, 144, false);\r\n        Tween.to(this, { y: this.startY - 80,alpha: 0.0 }, 400, Ease.linearNone, Laya.Handler.create(this, this.OnTweenEnd), 448, false);\r\n    \r\n    }\r\n\r\n    public tweenSpeed: number = 1;\r\n    private speedRandom = Math.random() * 0.5 + 0.7;\r\n    private tweenValue = 0;\r\n    public UpdateTween(delta: number)\r\n    {\r\n        this.tweenRate += delta   * this.tweenSpeed;\r\n        // this.tweenValue = Mathf.Lerp(this.tweenValue, 1.0, this.tweenRate);\r\n        // this.tweenValue = Mathf.Lerp(0, 1.0, this.tweenRate);\r\n        this.tweenValue = Mathf.Lerp(this.tweenValue * 0.25, 1.0, this.tweenRate);\r\n\r\n\r\n        if(this.tweenValue >= 1)\r\n        {\r\n            this.RecoverPool();\r\n        }\r\n    }\r\n\r\n    Clear()\r\n    {\r\n        Tween.clearAll(this);\r\n    }\r\n\r\n    OnTweenEnd()\r\n    {\r\n        Tween.clearAll(this);\r\n        if(this.bitmapText.debugItemLoop)\r\n        {\r\n            this.pos(this.position.x, this.position.y);\r\n            this.StartTween();\r\n            return;\r\n        }\r\n        this.RecoverPool();\r\n    }\r\n\r\n    public RecoverPool()\r\n    {\r\n        this.removeSelf();\r\n        Tween.clearAll(this);\r\n        this.bitmapText.RemoveTweenItem(this);\r\n        this.bitmapText.RecoverItem(this);\r\n    }\r\n\r\n}","import Text = Laya.Text;\r\nimport BitmapFont = Laya.BitmapFont;\r\nimport Handler = Laya.Handler;\r\nimport TextureTextAtlas from \"./TextureTextAtlas\";\r\nimport WarTextureTextItem from \"./WarTextureTextItem\";\r\nexport default class WarTextureText extends Laya.Sprite\r\n{\r\n    debugItemLoop: boolean = false;\r\n    \r\n    private static UID = 0;\r\n    uid: number = 0;\r\n    private itemPoolKey: string;\r\n\r\n    textStyleMap: TextureTextAtlas;\r\n\r\n    constructor(textStyleMap: TextureTextAtlas)\r\n    {\r\n        super();\r\n        this.uid = WarTextureText.UID ++;\r\n        this.itemPoolKey = \"WarTextureTextItem__\" + this.uid;\r\n        this.textStyleMap = textStyleMap;\r\n        this.InitItemPool();\r\n    }\r\n\r\n    InitItemPool(maxTextNum: number = 100)\r\n    {\r\n        for(var i = maxTextNum - 1; i >= 0; i --)\r\n        {\r\n            var item = new WarTextureTextItem(this, i);\r\n            Laya.Pool.recover(this.itemPoolKey, item);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    \r\n    textItemCache: Map<any, Map<string, WarTextureTextItem[]>> = new Map<any, Map<string, WarTextureTextItem[]>>();\r\n\r\n    GetItemCacheByType(text: string, atlaTypeKey: any):WarTextureTextItem[]\r\n    {\r\n        var typeMap: Map<string, WarTextureTextItem[]>;\r\n        if(this.textItemCache.has(atlaTypeKey))\r\n        {\r\n            typeMap = this.textItemCache.get(atlaTypeKey);\r\n        }\r\n        else\r\n        {\r\n            typeMap = new Map<string, WarTextureTextItem[]>();\r\n            this.textItemCache.set(atlaTypeKey, typeMap);\r\n        }\r\n\r\n        if(typeMap.has(text))\r\n        {\r\n            return typeMap.get(text);\r\n        }\r\n        else\r\n        {\r\n            var list = [];\r\n            typeMap.set(text, list);\r\n            return list;\r\n        }\r\n    }\r\n\r\n    RecoverItemCache(item:WarTextureTextItem)\r\n    {\r\n        var list = this.GetItemCacheByType(item.Text, item.atlaTypeKey);\r\n        list.push(item);\r\n    }\r\n\r\n    \r\n    RemoveFromItemCache(item:WarTextureTextItem)\r\n    {\r\n        if(!item.atlaTypeKey)\r\n        {\r\n            return;\r\n        }\r\n        var list = this.GetItemCacheByType(item.Text, item.atlaTypeKey);\r\n        var i = list.indexOf(item);\r\n        if(i != -1)\r\n        {\r\n            list.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    GetItemCache(text: string, atlaTypeKey: any):WarTextureTextItem\r\n    {\r\n        var list = this.GetItemCacheByType(text, atlaTypeKey);\r\n        if(list.length > 0)\r\n        {\r\n            var item = list.shift();\r\n            var pool = Laya.Pool.getPoolBySign(this.itemPoolKey);\r\n            var i = pool.indexOf(item);\r\n            if(i != -1)\r\n            {\r\n                pool.splice(i, 1);\r\n            }\r\n            return item;\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    useItemList:WarTextureTextItem[] = [];\r\n    GetItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0):WarTextureTextItem\r\n    {\r\n        var item:WarTextureTextItem = this.GetItemCache(text, atlaTypeKey);\r\n        if(item == null)\r\n        {\r\n            item = Laya.Pool.getItem(this.itemPoolKey);\r\n            if(item)\r\n            {\r\n                this.RemoveFromItemCache(item);\r\n            }\r\n        }\r\n\r\n\r\n        if(item == null)\r\n        {\r\n            if(this.useItemList.length > 0)\r\n            {\r\n                item = this.useItemList.shift();\r\n                item.Clear();\r\n                this.RemoveFromItemCache(item);\r\n                // item.RecoverPool();\r\n            }\r\n        }\r\n        \r\n        if(this.camera)\r\n        {\r\n            this.camera.worldToViewportPoint(position, item.position);\r\n            position = item.position;\r\n        }\r\n\r\n        if(this.textStyleMap.typeScaleMap.has(atlaTypeKey))\r\n        {\r\n            scale = this.textStyleMap.typeScaleMap.get(atlaTypeKey);\r\n        }\r\n\r\n        item.atlaTypeKey = atlaTypeKey;\r\n        item.position = position;\r\n        item.pos(position.x, position.y);\r\n        item.__scale = scale;\r\n        item.Text = text;\r\n        this.useItemList.push(item);\r\n        return item;\r\n    } \r\n\r\n    PlayItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0, tweenSpeed:number = 1.0):WarTextureTextItem\r\n    {\r\n        var item:WarTextureTextItem = this.GetItem(text, position, atlaTypeKey, scale);\r\n        item.tweenSpeed = tweenSpeed;\r\n        this.addChild(item);\r\n        item.StartTween();\r\n        return item;\r\n    }\r\n\r\n    private RemoveUseFromList(item:WarTextureTextItem)\r\n    {\r\n        var index = this.useItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.useItemList.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    RecoverItem(item:WarTextureTextItem)\r\n    {\r\n        this.RecoverItemCache(item);\r\n        Laya.Pool.recover(this.itemPoolKey, item);\r\n        this.RemoveUseFromList(item);\r\n    }\r\n\r\n    tweenItemList: WarTextureTextItem[] = [];\r\n\r\n    AddTweenItem(item:WarTextureTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index == -1)\r\n        {\r\n            this.tweenItemList.push(item);\r\n        }\r\n    }\r\n\r\n    RemoveTweenItem(item:WarTextureTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.tweenItemList.splice(index, 1);\r\n        }\r\n    }\r\n    StartUpdate()\r\n    {\r\n        Laya.timer.frameLoop(1, this, this.OnLoop);\r\n    }\r\n\r\n    StopUpdate()\r\n    {\r\n        Laya.timer.clear(this, this.OnLoop);\r\n    }\r\n\r\n    OnLoop()\r\n    {\r\n        var delta = Laya.timer.delta * 0.001;\r\n        for(var i = this.tweenItemList.length - 1; i >= 0; i --)\r\n        {\r\n            var item = this.tweenItemList[i];\r\n            item.UpdateTween(delta);\r\n        }\r\n    }\r\n\r\n    camera: Laya.Camera;\r\n    __parent: Laya.Node;\r\n    __parentIndex:number;\r\n    SetParent(parent: Laya.Node, parentIndex?:number)\r\n    {\r\n        this.__parent = parent;\r\n        this.__parentIndex = parentIndex;\r\n    }\r\n\r\n\r\n    Show()\r\n    {\r\n        if(this.__parentIndex != undefined)\r\n        {\r\n            this.__parent.addChildAt(this, this.__parentIndex);\r\n        }\r\n        else\r\n        {\r\n            this.__parent.addChild(this);\r\n        }\r\n        this.StartUpdate();\r\n    }\r\n\r\n    Hide()\r\n    {\r\n        this.Clear();\r\n        this.removeSelf();\r\n        this.StopUpdate();\r\n    }\r\n\r\n    Clear()\r\n    {\r\n        while(this.useItemList.length > 0)\r\n        {\r\n            var item = this.useItemList.shift();\r\n            item.RecoverPool();\r\n        }\r\n        this.tweenItemList.length = 0;\r\n    }\r\n\r\n\r\n}","import TextureTextAtlas from \"./TextureTextAtlas\";\r\nimport { MeshTextType, TextStyleType } from \"../MeshText/MeshTextType\";\r\nimport WarTextureText from \"./WarTextureText\";\r\n\r\nexport default class WarTextureTextLib\r\n{\r\n    static defaultAtlas: TextureTextAtlas;\r\n    static defaultText: WarTextureText;\r\n\r\n    static async LoadDefalutAsync()\r\n    {\r\n        if(this.defaultAtlas)\r\n        {\r\n            return;\r\n        }\r\n        var texturePath: string, atlasPath: string;\r\n        texturePath = \"res/font/WarMeshText.png\";\r\n        atlasPath = \"res/font/WarMeshText.txt\";\r\n        var atlas = await TextureTextAtlas.CreateAsync(texturePath, atlasPath);\r\n        atlas.GenerateNumType(MeshTextType.White, TextStyleType.White);\r\n        atlas.GenerateNumType(MeshTextType.Red, TextStyleType.Red);\r\n        atlas.GenerateNumType(MeshTextType.Green, TextStyleType.Green);\r\n        atlas.GenerateNumType(MeshTextType.WhiteBig, TextStyleType.WhiteBig);\r\n        atlas.GenerateNumType(MeshTextType.YellowBig, TextStyleType.YellowBig);\r\n        atlas.AddToAllType(\"c\", \"c_yellow\");\r\n        atlas.AddToType(\"c\", \"c_red\", TextStyleType.Red);\r\n        atlas.AddToAllType(\"d\");\r\n        atlas.InitAllChartSpritePool();\r\n\r\n        \r\n        // atlas.typeScaleMap.set(TextStyleType.White, 1);\r\n        // atlas.typeScaleMap.set(TextStyleType.Green, 1);\r\n        // atlas.typeScaleMap.set(TextStyleType.Green, 1);\r\n\r\n        // atlas.typeScaleMap.set(TextStyleType.WhiteBig, 1);\r\n        // atlas.typeScaleMap.set(TextStyleType.YellowBig, 1);\r\n\r\n        this.defaultAtlas = atlas;\r\n\r\n        var text = new WarTextureText(atlas);\r\n        this.defaultText = text;\r\n    }\r\n}","\r\nexport interface MeshTextAtlasData\r\n{\r\n    meta: {size: {w: number, h: number}};\r\n    frames: {[key:string]:MeshTextAtlasFrameData};\r\n}\r\n\r\nexport interface MeshTextAtlasFrameData\r\n{\r\n    frameUV: {xMin:number, yMin:number, xMax: number, yMax:number, w: number, h: number, r: number};\r\n    frame: {x:number, y:number, w: number, h:number};\r\n    spriteSourceSize: {x:number, y:number, w: number, h:number};\r\n    sourceSize: {w: number, h:number};\r\n    materail: Laya.UnlitMaterial;\r\n    poolSignMaterial:string;\r\n}\r\n\r\n\r\nexport default class WarMaterialTextAtlas\r\n{\r\n    private static UID = 0;\r\n    uid:int = 0;\r\n    texture: Laya.Texture2D;\r\n    atlasData: MeshTextAtlasData;\r\n    private typeMap: Map<any, Map<string, MeshTextAtlasFrameData>> = new Map<any, Map<string, MeshTextAtlasFrameData>>();\r\n\r\n    get textureWidth()\r\n    {\r\n        return this.atlasData.meta.size.w;\r\n    }\r\n\r\n    get textureHeight()\r\n    {\r\n        return this.atlasData.meta.size.h;\r\n    }\r\n\r\n    private _UnlitMaterial:Laya.UnlitMaterial;\r\n    get UnlitMaterial():Laya.UnlitMaterial\r\n    {\r\n        if(!this._UnlitMaterial)\r\n        {\r\n            var m = new Laya.UnlitMaterial();\r\n            m.renderMode = Laya.UnlitMaterial.RENDERMODE_TRANSPARENT;\r\n            m.albedoTexture = this.texture;\r\n            // m.cull = Laya.RenderState.CULL_NONE;\r\n            this._UnlitMaterial = m;\r\n        }\r\n        return this._UnlitMaterial;\r\n    }\r\n\r\n    \r\n\r\n\tprivate static LoadAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.load(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n                resolve(data);\r\n\t\t\t}), null, type);\r\n\t\t});\r\n\t}\r\n    \r\n\tprivate static Load3DAsync(path: string, type?:string): Promise<any>\r\n\t{\r\n\t\treturn new  Promise<any>((resolve)=>\r\n\t\t{\r\n\t\t\tLaya.loader.create(path, Laya.Handler.create(this, (data:any)=>\r\n\t\t\t{\r\n                Laya.timer.frameOnce(1, this, ()=>\r\n                {\r\n                    resolve(data);\r\n                })\r\n\t\t\t}), null, type);\r\n\t\t});\r\n    }\r\n    \r\n    \r\n    static async CreateAsync(texturePath: string, atlasPath: string): Promise<WarMaterialTextAtlas>\r\n    {\r\n        var texture = await WarMaterialTextAtlas.LoadAsync(texturePath, Laya.Loader.TEXTURE2D);\r\n        var atlasData = await WarMaterialTextAtlas.LoadAsync(atlasPath, Laya.Loader.JSON);\r\n        var atlas = new WarMaterialTextAtlas(texture, atlasData);\r\n        return atlas;\r\n    }\r\n\r\n    constructor(texture: Laya.Texture2D, atlasData: MeshTextAtlasData)\r\n    {\r\n        texture.wrapModeU = Laya.Texture2D.WARPMODE_CLAMP;\r\n        texture.wrapModeV = Laya.Texture2D.WARPMODE_CLAMP;\r\n        this.uid = WarMaterialTextAtlas.UID ++;\r\n        this.texture = texture;\r\n        this.atlasData = atlasData;\r\n\r\n        this.InitUV();\r\n    }\r\n\r\n    InitUV()\r\n    {\r\n        var atlasData = this.atlasData;\r\n        var textureWidth =  atlasData.meta.size.w;\r\n        var textureHeight =  atlasData.meta.size.h;\r\n        for(var frameKey in atlasData.frames)\r\n        {\r\n            var frame = atlasData.frames[frameKey];\r\n            var uv = frame.frameUV = \r\n            {\r\n                xMin: frame.frame.x / textureWidth,\r\n                yMin: frame.frame.y / textureHeight,\r\n                xMax: (frame.frame.x + frame.frame.w) / textureWidth,\r\n                yMax: (frame.frame.y + frame.frame.h) / textureHeight,\r\n                w: frame.frame.w / textureWidth,\r\n                h: frame.frame.h / textureHeight,\r\n                r:frame.frame.w / frame.frame.h\r\n            };\r\n            // var uv = frame.frameUV = \r\n            // {\r\n            //     xMin: frame.spriteSourceSize.x / textureWidth,\r\n            //     yMin: frame.spriteSourceSize.y / textureHeight,\r\n            //     xMax: (frame.frame.x + frame.frame.w) / textureWidth,\r\n            //     yMax: (frame.frame.y + frame.frame.h) / textureHeight,\r\n            //     w: frame.spriteSourceSize.w / textureWidth,\r\n            //     h: frame.spriteSourceSize.h / textureHeight,\r\n            //     r:frame.frame.w / frame.frame.h\r\n            // };\r\n            frame.poolSignMaterial = \"WarMaterialTextAtlas_\" + this.uid + \"_\" + frameKey;\r\n            var material = frame.materail = new Laya.UnlitMaterial();\r\n            material.albedoTexture = this.texture;\r\n            material.renderMode = Laya.UnlitMaterial.RENDERMODE_TRANSPARENT;\r\n            material.tilingOffset = new Laya.Vector4(\r\n                uv.w,\r\n                uv.h,\r\n                uv.xMin,\r\n                uv.yMin\r\n            );\r\n\r\n\r\n        }\r\n    }\r\n\r\n    GetType(typeKey: any):Map<string, MeshTextAtlasFrameData>\r\n    {\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n\r\n    GetOrCreateType(typeKey: any):Map<string, MeshTextAtlasFrameData>\r\n    {\r\n        if(!this.typeMap.has(typeKey))\r\n        {\r\n            this.typeMap.set(typeKey, new Map<string, MeshTextAtlasFrameData>());\r\n        }\r\n        return this.typeMap.get(typeKey);\r\n    }\r\n\r\n    GenerateNumType(numTypeName: string, typeKey?: any)\r\n    {\r\n        if(typeKey === undefined)\r\n        {\r\n            typeKey = numTypeName;\r\n        }\r\n\r\n        var map = this.GetOrCreateType(typeKey);\r\n        for(var i = 0; i <= 9; i ++)\r\n        {\r\n            var frameName = numTypeName + i;\r\n            var frame = this.atlasData.frames[frameName];\r\n            if(frame)\r\n            {\r\n                map.set(i.toString(), frame);\r\n            } \r\n            else\r\n            {\r\n                console.warn(\"文字图集里没找到字符:\" + i);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        var flags = [\"-\", \"+\"];\r\n        for(var flag of flags)\r\n        {\r\n            var frameName = numTypeName + flag;\r\n            var frame = this.atlasData.frames[frameName];\r\n            if(frame)\r\n            {\r\n                map.set(i.toString(), frame);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    AddToType(chart: string, frameName: string, typeKey: any)\r\n    {\r\n        if(frameName === undefined)\r\n        {\r\n            frameName = chart;\r\n        }\r\n\r\n        var map = this.GetOrCreateType(typeKey);\r\n        var frame = this.atlasData.frames[frameName];\r\n        if(frame)\r\n        {\r\n            map.set(chart, frame);\r\n        }\r\n    }\r\n\r\n    \r\n    AddToAllType(chart: string, frameName?: string)\r\n    {\r\n        if(frameName === undefined)\r\n        {\r\n            frameName = chart;\r\n        }\r\n\r\n        var frame = this.atlasData.frames[frameName];\r\n        if(frame)\r\n        {\r\n            this.typeMap.forEach((map, key)=>\r\n            {\r\n                map.set(chart, frame);\r\n            })\r\n        }\r\n    }\r\n\r\n    GetTypeFrame(chart: string, typeKey:any):MeshTextAtlasFrameData\r\n    {\r\n        var map = this.GetType(typeKey);\r\n        return map.get(chart);\r\n    }\r\n\r\n    GetFrame(chart: string, typeKey?:any):MeshTextAtlasFrameData\r\n    {\r\n        var frame: MeshTextAtlasFrameData;\r\n        if(typeKey !== undefined)\r\n        {\r\n            frame = this.GetTypeFrame(chart, typeKey);\r\n            if(frame)\r\n            {\r\n                return frame;\r\n            }\r\n        }\r\n\r\n        frame = this.atlasData.frames[chart];\r\n        return frame;\r\n\r\n    }\r\n\r\n    \r\n    InitAllChartSpritePool(maxNum: number = 100)\r\n    {\r\n        var atlasData = this.atlasData;\r\n\r\n        for(var frameKey in atlasData.frames)\r\n        {\r\n            var frame = atlasData.frames[frameKey];\r\n            for(var i = 0; i < maxNum; i ++)\r\n            {\r\n                var sprite = this.CreateChartSprite(frame);\r\n                Laya.Pool.recover(frame.poolSignMaterial, sprite);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    spriteMesh = Laya.PrimitiveMesh.createQuad(1, 1);\r\n    CreateChartSprite(frame: MeshTextAtlasFrameData):Laya.MeshSprite3D\r\n    {\r\n        var sprite = new Laya.MeshSprite3D(this.spriteMesh);\r\n        sprite.meshRenderer.sharedMaterial = frame.materail;\r\n        sprite.name = frame.poolSignMaterial;\r\n        return sprite;\r\n    }\r\n\r\n    GetChartSprite(chart: string, typeKey?:any): Laya.MeshSprite3D\r\n    {\r\n        var frame = this.GetFrame(chart, typeKey);\r\n        var sprite = Laya.Pool.getItem(frame.poolSignMaterial);\r\n        if(!sprite)\r\n        {\r\n            sprite = this.CreateChartSprite(frame);\r\n        }\r\n        return sprite;\r\n    }\r\n\r\n    RecoverChartSprite(sprite: Laya.MeshSprite3D)\r\n    {\r\n        Laya.Pool.recover(sprite.name, sprite);\r\n    }\r\n    \r\n\r\n\r\n}","\r\nimport Vector2 = Laya.Vector2;\r\nimport Vector3 = Laya.Vector3;\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nimport WarMaterialText from \"./WarMaterialText\";\r\nimport Tool from \"../MeshText/Tool\";\r\nexport default class WarMaterialTextItem extends Laya.Sprite3D\r\n{\r\n    bitmapText: WarMaterialText;\r\n    public index:number = 0;\r\n    public atlaTypeKey: any;\r\n    private _text: string = \"\";\r\n    private spriteList: Laya.MeshSprite3D[] = [];\r\n    constructor(bitmapText: WarMaterialText, index?:number)\r\n    {\r\n        super();\r\n        this.bitmapText = bitmapText;\r\n        this.index = index;\r\n    }\r\n\r\n    \r\n    public get Text():string\r\n    {\r\n        return this._text;\r\n    }\r\n\r\n    public set Text(value: string)\r\n    {\r\n        if(value === undefined || value === null)\r\n        {\r\n            value = \"\";\r\n        }\r\n\r\n        if(this._text == value)\r\n        {\r\n            return;\r\n        }\r\n\r\n        for(var sprite of this.spriteList)\r\n        {\r\n            sprite.removeSelf();\r\n            this.bitmapText.textStyleMap.RecoverChartSprite(sprite);\r\n        }\r\n        this.spriteList.length = 0;\r\n\r\n        var x = 0;\r\n        for(var i = 0, len = value.length; i < len; i ++)\r\n        {\r\n            var sprite = this.bitmapText.textStyleMap.GetChartSprite(value[i], this.atlaTypeKey);\r\n            sprite.transform.localPositionX = i;\r\n            this.addChild(sprite);\r\n            this.spriteList.push(sprite);\r\n\r\n        //       let boxLineSprite3D = this.addChild(new Laya.PixelLineSprite3D(100));\r\n        // Tool.linearModel(sprite, boxLineSprite3D, Laya.Color.GREEN);\r\n        }\r\n    }\r\n\r\n    public position: Vector3 = new Vector3();\r\n\r\n    \r\n    private startX:number = 0;\r\n\r\n    private startY:number = 0;\r\n    public tweenRate = 0;\r\n    public StartTween()\r\n    {\r\n        this.tweenRate = 0;\r\n        this.tweenValue = 0;\r\n        // this.bitmapText.AddTweenItem(this);\r\n        \r\n        let ratio = Number(Math.random().toFixed(2));\r\n        this.startY = this.transform.localPositionY;\r\n\r\n        this.transform.scale = new Vector3(0, 0, 1);\r\n        // this.scale(0,0);\r\n        // this.alpha = 1.0;\r\n        Tween.to(this.transform, { localScaleX: 1.5, localScaleY: 1.5 }, 144, Ease.linearNone, null, 0, false);\r\n        Tween.to(this.transform, { localScaleX: 0.8, localScaleY: 0.8 }, 144, Ease.linearNone, null, 144, false);\r\n        Tween.to(this.transform, { localPositionY: this.startY + 1 }, 400, Ease.linearNone, Laya.Handler.create(this, this.OnTweenEnd), 448, false);\r\n    \r\n    }\r\n\r\n    public tweenSpeed: number = 1;\r\n    private speedRandom = Math.random() * 0.5 + 0.7;\r\n    private tweenValue = 0;\r\n    public UpdateTween(delta: number)\r\n    {\r\n        this.tweenRate += delta   * this.tweenSpeed;\r\n        // this.tweenValue = Mathf.Lerp(this.tweenValue, 1.0, this.tweenRate);\r\n        // this.tweenValue = Mathf.Lerp(0, 1.0, this.tweenRate);\r\n        this.tweenValue = Mathf.Lerp(this.tweenValue * 0.25, 1.0, this.tweenRate);\r\n\r\n\r\n\r\n        if(this.tweenValue >= 1)\r\n        {\r\n            this.RecoverPool();\r\n        }\r\n    }\r\n\r\n    OnTweenEnd()\r\n    {\r\n        Tween.clearAll(this.transform);\r\n        if(this.bitmapText.debugItemLoop)\r\n        {\r\n            this.transform.position = this.position;\r\n            this.StartTween();\r\n            return;\r\n        }\r\n        this.RecoverPool();\r\n    }\r\n\r\n    public RecoverPool()\r\n    {\r\n        this.removeSelf();\r\n        Tween.clearAll(this.transform);\r\n        this.bitmapText.RemoveTweenItem(this);\r\n        this.bitmapText.RecoverItem(this);\r\n    }\r\n\r\n}","import Text = Laya.Text;\r\nimport BitmapFont = Laya.BitmapFont;\r\nimport Handler = Laya.Handler;\r\nimport WarMaterialTextAtlas from \"./WarMaterialTextAtlas\";\r\nimport WarMaterialTextItem from \"./WarMaterialTextItem\";\r\nexport default class WarMaterialText extends Laya.Sprite3D\r\n{\r\n    debugItemLoop: boolean = false;\r\n\r\n    private static UID = 0;\r\n    uid: number = 0;\r\n    private itemPoolKey: string;\r\n\r\n    textStyleMap: WarMaterialTextAtlas;\r\n\r\n    constructor(textStyleMap: WarMaterialTextAtlas)\r\n    {\r\n        super();\r\n        this.uid = WarMaterialText.UID ++;\r\n        this.itemPoolKey = \"WarMaterialText__\" + this.uid;\r\n        this.textStyleMap = textStyleMap;\r\n        this.InitItemPool();\r\n    }\r\n\r\n    InitItemPool(maxTextNum: number = 100)\r\n    {\r\n        for(var i = maxTextNum - 1; i >= 0; i --)\r\n        {\r\n            var item = new WarMaterialTextItem(this, i);\r\n            Laya.Pool.recover(this.itemPoolKey, item);\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    useItemList:WarMaterialTextItem[] = [];\r\n    GetItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0):WarMaterialTextItem\r\n    {\r\n        var item:WarMaterialTextItem = Laya.Pool.getItem(this.itemPoolKey);\r\n        if(item == null)\r\n        {\r\n            if(this.useItemList.length > 0)\r\n            {\r\n                item = this.useItemList.shift();\r\n                item.RecoverPool();\r\n            }\r\n        }\r\n        item.atlaTypeKey = atlaTypeKey;\r\n        item.position = position;\r\n        item.transform.position = position;\r\n        item.Text = text;\r\n        this.useItemList.push(item);\r\n        return item;\r\n    } \r\n\r\n    PlayItem(text: string, position = new Laya.Vector3(0, 0, 0), atlaTypeKey?: any, scale: number = 1.0, tweenSpeed:number = 1.0):WarMaterialTextItem\r\n    {\r\n        var item:WarMaterialTextItem = this.GetItem(text, position, atlaTypeKey, scale);\r\n        item.tweenSpeed = tweenSpeed;\r\n        this.addChild(item);\r\n        item.StartTween();\r\n        return item;\r\n    }\r\n\r\n    private RemoveUseFromList(item:WarMaterialTextItem)\r\n    {\r\n        var index = this.useItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.useItemList.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    RecoverItem(item:WarMaterialTextItem)\r\n    {\r\n        Laya.Pool.recover(this.itemPoolKey, item);\r\n        this.RemoveUseFromList(item);\r\n    }\r\n\r\n    tweenItemList: WarMaterialTextItem[] = [];\r\n\r\n    AddTweenItem(item:WarMaterialTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index == -1)\r\n        {\r\n            this.tweenItemList.push(item);\r\n        }\r\n    }\r\n\r\n    RemoveTweenItem(item:WarMaterialTextItem)\r\n    {\r\n        var index = this.tweenItemList.indexOf(item);\r\n        if(index != -1)\r\n        {\r\n            this.tweenItemList.splice(index, 1);\r\n        }\r\n    }\r\n    StartUpdate()\r\n    {\r\n        Laya.timer.frameLoop(1, this, this.OnLoop);\r\n    }\r\n\r\n    StopUpdate()\r\n    {\r\n        Laya.timer.clear(this, this.OnLoop);\r\n    }\r\n\r\n    OnLoop()\r\n    {\r\n        var delta = Laya.timer.delta * 0.001;\r\n        for(var i = this.tweenItemList.length - 1; i >= 0; i --)\r\n        {\r\n            var item = this.tweenItemList[i];\r\n            item.UpdateTween(delta);\r\n        }\r\n    }\r\n\r\n    camera: Laya.Camera;\r\n    __parent: Laya.Node;\r\n    __parentIndex:number;\r\n    SetParent(parent: Laya.Node, parentIndex?:number)\r\n    {\r\n        this.__parent = parent;\r\n        this.__parentIndex = parentIndex;\r\n    }\r\n\r\n\r\n    Show()\r\n    {\r\n        if(this.__parentIndex != undefined)\r\n        {\r\n            this.__parent.addChildAt(this, this.__parentIndex);\r\n        }\r\n        else\r\n        {\r\n            this.__parent.addChild(this);\r\n        }\r\n        this.StartUpdate();\r\n    }\r\n\r\n    Hide()\r\n    {\r\n        this.Clear();\r\n        this.removeSelf();\r\n        this.StopUpdate();\r\n    }\r\n\r\n    Clear()\r\n    {\r\n        while(this.useItemList.length > 0)\r\n        {\r\n            var item = this.useItemList.shift();\r\n            item.RecoverPool();\r\n        }\r\n        this.tweenItemList.length = 0;\r\n    }\r\n\r\n\r\n}","\r\nimport { MeshTextType, TextStyleType } from \"../MeshText/MeshTextType\";\r\nimport WarMaterialTextAtlas from \"./WarMaterialTextAtlas\";\r\nimport WarMaterialText from \"./WarMaterialText\";\r\n\r\nexport default class WarMaterialLib\r\n{\r\n    static defaultAtlas: WarMaterialTextAtlas;\r\n    static defaultText: WarMaterialText;\r\n\r\n    static async LoadDefalutAsync()\r\n    {\r\n        if(this.defaultAtlas)\r\n        {\r\n            return;\r\n        }\r\n        var texturePath: string, atlasPath: string;\r\n        texturePath = \"res/font/WarMeshText.png\";\r\n        atlasPath = \"res/font/WarMeshText.txt\";\r\n        var atlas = await WarMaterialTextAtlas.CreateAsync(texturePath, atlasPath);\r\n        atlas.GenerateNumType(MeshTextType.White, TextStyleType.White);\r\n        atlas.GenerateNumType(MeshTextType.Red, TextStyleType.Red);\r\n        atlas.GenerateNumType(MeshTextType.Green, TextStyleType.Green);\r\n        atlas.GenerateNumType(MeshTextType.WhiteBig, TextStyleType.WhiteBig);\r\n        atlas.GenerateNumType(MeshTextType.YellowBig, TextStyleType.YellowBig);\r\n        atlas.AddToAllType(\"c\", \"c_yellow\");\r\n        atlas.AddToType(\"c\", \"c_red\", TextStyleType.Red);\r\n        atlas.AddToAllType(\"d\");\r\n        atlas.InitAllChartSpritePool();\r\n        this.defaultAtlas = atlas;\r\n\r\n        var text = new WarMaterialText(atlas);\r\n        this.defaultText = text;\r\n    }\r\n}","import { TestScene } from \"./TestSene\";\r\nimport { MeshTextType, TextStyleType } from \"../MeshText/MeshTextType\";\r\nimport { ITextManager } from \"../Interfaces/ITextManager\";\r\nimport MeshTextLib from \"../MeshText/MeshTextLib\";\r\nimport WarBitmapText from \"../WarBitmapText/WarBitmapText\";\r\nimport WarBitmapTextLib from \"../WarBitmapText/WarBitmapTextLib\";\r\nimport WarTextureTextLib from \"../WarTextureText/WarTextureTextLib\";\r\nimport WarMaterialLib from \"../WarMaterialText/WarMaterialLib\";\r\nimport MeshTextBatchMesh from \"../MeshText/MeshTextBatchMesh\";\r\n\r\nexport default class TestText extends Laya.Sprite\r\n{\r\n    sc: TestScene;\r\n    textNum = 100;\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        window['testText'] = this;\r\n      \r\n\r\n    }\r\n    \r\n    async InitAsync()\r\n    {\r\n        var scene = TestScene.create();\r\n        Laya.stage.addChild(scene);\r\n        this.sc = scene;\r\n\r\n\r\n        await this.InitAsyncTextManager();\r\n\r\n        this.strNum = 20;\r\n\r\n\r\n\t\tvar skins = [\r\n\t\t\t\"res/button-1.png\"\r\n\t\t];\r\n\r\n\t\tLaya.loader.load(skins, Laya.Handler.create(this, this.onUIAssetsLoaded));\r\n\t\t\r\n    }\r\n\r\n    async InitAsyncTextManager()\r\n    {\r\n        await MeshTextLib.LoadDefalutAsync();\r\n        await WarBitmapTextLib.LoadDefalutAsync();\r\n        await WarTextureTextLib.LoadDefalutAsync();\r\n        await WarMaterialLib.LoadDefalutAsync();\r\n\r\n        MeshTextLib.defaultText.camera = this.sc.camera;\r\n        WarBitmapTextLib.defaultText.camera = this.sc.camera;\r\n        WarTextureTextLib.defaultText.camera = this.sc.camera;\r\n        WarMaterialLib.defaultText.camera = this.sc.camera;\r\n\r\n        MeshTextLib.defaultText.SetParent(this.sc);\r\n        WarBitmapTextLib.defaultText.SetParent(Laya.stage, 1);\r\n        WarTextureTextLib.defaultText.SetParent(Laya.stage, 1);\r\n        WarMaterialLib.defaultText.SetParent(this.sc, 0);\r\n\r\n        this.SetItemDebugLoop(true);\r\n    }\r\n\r\n    SetItemDebugLoop(value: boolean)\r\n    {\r\n\r\n        MeshTextLib.defaultText.debugItemLoop = value;\r\n        WarBitmapTextLib.defaultText.debugItemLoop = value;\r\n        WarTextureTextLib.defaultText.debugItemLoop = value;\r\n        WarMaterialLib.defaultText.debugItemLoop = value;\r\n    }\r\n\r\n\r\n\tonUIAssetsLoaded() \r\n\t{\r\n        \r\n\t\tthis.createStrNumButton(\"strNum=1\", 0, ()=>{ this.onClickStrNum(1) });\r\n\t\tthis.createStrNumButton(\"strNum=5\", 1, ()=>{ this.onClickStrNum(5) });\r\n\t\tthis.createStrNumButton(\"strNum=10\", 2, ()=>{ this.onClickStrNum(10) });\r\n\t\tthis.createStrNumButton(\"strNum=20\", 3, ()=>{ this.onClickStrNum(20) });\r\n\t\tthis.createStrNumButton(\"strNum=100\", 4, ()=>{ this.onClickStrNum(100) });\r\n        this.createStrNumButton(\"strNum=200\", 5, ()=>{ this.onClickStrNum(200) });\r\n        \r\n        \r\n\t\tthis.createTextNumButton(\"textNum=1\", 0, ()=>{ this.onClickTextNum(1) });\r\n\t\tthis.createTextNumButton(\"textNum=5\", 1, ()=>{ this.onClickTextNum(5) });\r\n\t\tthis.createTextNumButton(\"textNum=10\", 2, ()=>{ this.onClickTextNum(10) });\r\n\t\tthis.createTextNumButton(\"textNum=20\", 3, ()=>{ this.onClickTextNum(20) });\r\n\t\tthis.createTextNumButton(\"textNum=100\", 4, ()=>{ this.onClickTextNum(100) });\r\n        this.createTextNumButton(\"textNum=200\", 5, ()=>{ this.onClickTextNum(200) });\r\n        \r\n        \r\n\t\tthis.createTextNumButton(\"itemLoop=false\", 7, ()=>{ this.SetItemDebugLoop(false) });\r\n\t\tthis.createTextNumButton(\"itemLoop=true\", 8, ()=>{ this.SetItemDebugLoop(true) });\r\n\r\n\t\tthis.createTextButton(\"Clear\", 0, this.onClickClear.bind(this));\r\n\t\tthis.createTextButton(\"MeshText\", 2, this.onClickMeshText.bind(this));\r\n\t\tthis.createTextButton(\"BitmapFontText\", 3, this.onClickBitmapFontText.bind(this));\r\n\t\tthis.createTextButton(\"TextureSpriteText\", 4, this.onClickTextureSpriteText.bind(this));\r\n        this.createTextButton(\"MaterialText\", 5, this.onClickMaterialText.bind(this));\r\n        \r\n        \r\n        Laya.stage.addChild(this);\r\n        this.onResize();\r\n        Laya.stage.on(Laya.Event.RESIZE, this, this.onResize);\r\n\r\n        this.onClickMeshText();\r\n    }\r\n\r\n    private _currentTextManager: ITextManager;\r\n    \r\n    private get currentTextManager(): ITextManager\r\n    {\r\n        return this._currentTextManager;\r\n    }\r\n\r\n    private set currentTextManager(v: ITextManager)\r\n    {\r\n        if(this._currentTextManager)\r\n        {\r\n            this._currentTextManager.Hide();\r\n        }\r\n        this._currentTextManager = v;\r\n        v.Show();\r\n        this.Refresh();\r\n    }\r\n\r\n\tonClickClear()\r\n\t{\r\n        if(this._currentTextManager)\r\n        {\r\n            this._currentTextManager.Clear();\r\n        }\r\n    }\r\n    \r\n\tonClickMeshText()\r\n\t{\r\n        this.currentTextManager = MeshTextLib.defaultText;\r\n    }\r\n    \r\n\tonClickBitmapFontText()\r\n\t{\r\n        this.currentTextManager = WarBitmapTextLib.defaultText;\r\n    }\r\n    \r\n\tonClickTextureSpriteText()\r\n\t{\r\n        this.currentTextManager = WarTextureTextLib.defaultText;\r\n    }\r\n    \r\n\tonClickMaterialText()\r\n\t{\r\n        this.currentTextManager = WarMaterialLib.defaultText;\r\n    }\r\n\r\n\tonClickStrNum(num: number)\r\n\t{\r\n        this.setStrNum(num);\r\n        this.Refresh();\r\n    }\r\n    \r\n\tonClickTextNum(num: number)\r\n\t{\r\n        this.textNum = num;\r\n        this.Refresh();\r\n    }\r\n\r\n    Refresh()\r\n    {\r\n        this.onClickClear();\r\n        this.setTextNum(this.currentTextManager, this.textNum);\r\n    }\r\n\r\n\r\n    onResize()\r\n    {\r\n\r\n\t\tthis.x = Laya.stage.width - 350;\r\n        this.y = Laya.stage.height - 20 - 7 * 80;\r\n    }\r\n\r\n\r\n\tcreateTextButton(label: string, y =0, fun:Function)\r\n\t{\r\n\t\tvar button = new Laya.Button(\"res/button-1.png\", label);\r\n\t\tbutton.width = 100;\r\n\t\tbutton.height = 50;\r\n\t\tbutton.x = 0;\r\n\t\tbutton.y = y * 60;\r\n\r\n\t\tthis.addChild(button);\r\n\t\tbutton.on(Laya.Event.CLICK, this, fun);\r\n    }\r\n    \r\n    \r\n\r\n\tcreateStrNumButton(label: string, y =0, fun:Function)\r\n\t{\r\n\t\tvar button = new Laya.Button(\"res/button-1.png\", label);\r\n\t\tbutton.width = 100;\r\n\t\tbutton.height = 25;\r\n\t\tbutton.x = 110;\r\n\t\tbutton.y = y * 40;\r\n\r\n\t\tthis.addChild(button);\r\n\t\tbutton.on(Laya.Event.CLICK, this, fun);\r\n\t}\r\n\r\n\r\n\tcreateTextNumButton(label: string, y =0, fun:Function)\r\n\t{\r\n\t\tvar button = new Laya.Button(\"res/button-1.png\", label);\r\n\t\tbutton.width = 100;\r\n\t\tbutton.height = 25;\r\n\t\tbutton.x = 220;\r\n\t\tbutton.y = y * 40;\r\n\r\n\t\tthis.addChild(button);\r\n\t\tbutton.on(Laya.Event.CLICK, this, fun);\r\n\t}\r\n\r\n\r\n    \r\n    \r\n    atlasKeyTypeList = [TextStyleType.White, TextStyleType.Red, TextStyleType.Green, TextStyleType.WhiteBig, TextStyleType.YellowBig];\r\n    strList = [];\r\n\r\n    \r\n    get strNum()\r\n    {\r\n        return this.strList.length;\r\n    }\r\n\r\n    set strNum(v: number)\r\n    {\r\n        this.setStrNum(v);\r\n    }\r\n\r\n    setStrNum(num: number = 100)\r\n    {\r\n        for(var j = 0; j <= num; j ++)\r\n        {\r\n            if(Random.range(1,10) > 8)\r\n            {\r\n                str = \"d\";\r\n                this.strList[j] = str;\r\n                continue;\r\n            }\r\n            // var str = \"cd\";\r\n            var str = \"\";\r\n            if(Random.range(1,10) > 7)\r\n            {\r\n                str = \"c\";\r\n            }\r\n            var num = Random.range(1,4);\r\n            for(var i = 0; i <= num; i ++)\r\n            {\r\n                str += Random.rangeBoth(0,9).toString();\r\n            }\r\n            this.strList[j] = str;\r\n        }\r\n    }\r\n\r\n    createText(textManager:ITextManager,  position = new Laya.Vector3(0, 0, 0))\r\n    {\r\n        var text = this.strList[Random.range(0,this.strList.length)];\r\n        var atlasKeyType = this.atlasKeyTypeList[Random.range(0,this.atlasKeyTypeList.length)];\r\n        // atlasKeyType = TextStyleType.YellowBig;\r\n        var item = textManager.PlayItem(text, position, atlasKeyType, 0.25, 1.2);\r\n    }\r\n\r\n    setTextNum(textManager:ITextManager, num: number = 100)\r\n    {\r\n        for(var i= 0; i < num; i ++)\r\n        {\r\n            // this.createText(textManager,  new Laya.Vector3(0 , 0 , 0));\r\n        \r\n            this.createText(textManager,  new Laya.Vector3(Math.random() * 8 + -4 , Math.random() * 3 + -2 , 0));\r\n        }\r\n    }\r\n}","import TestShader from \"./TestShader\";\r\nimport GameConfig from \"../GameConfig\";\r\nimport TestText from \"./TestText\";\r\nimport { TestScene } from \"./TestSene\";\r\n\r\n class TestMain \r\n{\r\n    constructor() \r\n    {\r\n\t\tthis.InitLaya();\r\n\r\n\r\n\t\tif(Laya.Browser.onWeiXin)\r\n\t\t{\r\n\t\t\tLaya.URL.basePath = \"http://192.168.1.10:8900/bin/\";\r\n\t\t}\r\n\t\t\r\n\r\n\t\tvar text = new TestText();\r\n\t\ttext.InitAsync();\r\n\t\t\r\n\t\t// 启动游戏\r\n\t\t// new TestShader();\r\n\t\t// new TestShader2();\r\n\t\t// new TestShader3();\r\n\t\t// new TestShader4();\r\n\t\t// new TestShader5();\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\r\n\tInitLaya()\r\n\t{\r\n\t\t//根据IDE设置初始化引擎\t\t\r\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\r\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\r\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\r\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\r\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\r\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\r\n\t\tLaya.stage.alignV = GameConfig.alignV;\r\n\t\tLaya.stage.alignH = GameConfig.alignH;\r\n\t\t//兼容微信不支持加载scene后缀场景\r\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\r\n\r\n\t\tLaya.Shader3D.debugMode = true;\r\n\r\n\t\t//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）\r\n\t\t// if (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\r\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\r\n\t\tif (GameConfig.stat) Laya.Stat.show();\r\n\t\tLaya.alertGlobalError = true;\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n//激活启动类\r\nnew TestMain();"],"names":["Vector3","VertexMesh","Shader3D","SubShader","Vector4","RenderState","Material","TextStyleType","Tween","Ease"],"mappings":"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"}